{"ast":null,"code":"import { Message } from '../message.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../message.service\";\nimport * as i2 from \"src/app/contacts/contact.service\";\nimport * as i3 from \"@angular/forms\";\nconst _c0 = [\"subject\"];\nconst _c1 = [\"msgText\"];\nexport class MessageEditComponent {\n  constructor(messageService, contactService) {\n    this.messageService = messageService;\n    this.contactService = contactService;\n  }\n  ngOnInit() {\n    this.contactService.getContact('101').subscribe(contact => {\n      this.currentSender = contact;\n    });\n  }\n  onSendMessage() {\n    const subjectValue = this.subjectRef.nativeElement.value;\n    const msgTextValue = this.msgTextRef.nativeElement.value;\n    const id = this.messageService.getMaxId();\n    console.log(id);\n    const newMessage = new Message('', subjectValue, msgTextValue, this.currentSender);\n    this.messageService.addMessage(newMessage);\n  }\n  onClear() {\n    //assign blank values to the subject and msgText\n    this.subjectRef.nativeElement.value = '';\n    this.msgTextRef.nativeElement.value = '';\n  }\n}\nMessageEditComponent.ɵfac = function MessageEditComponent_Factory(t) {\n  return new (t || MessageEditComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.ContactService));\n};\nMessageEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MessageEditComponent,\n  selectors: [[\"cms-message-edit\"]],\n  viewQuery: function MessageEditComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n      i0.ɵɵviewQuery(_c1, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subjectRef = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.msgTextRef = _t.first);\n    }\n  },\n  decls: 20,\n  vars: 0,\n  consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [\"id\", \"document-edit\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"for\", \"subject\"], [\"type\", \"text\", \"id\", \"subject\", \"size\", \"120\", \"max\", \"120\", 1, \"form-control\"], [\"subject\", \"\"], [\"for\", \"message\"], [\"type\", \"text\", \"id\", \"message\", \"max\", \"255\", \"size\", \"120\", 1, \"form-control\"], [\"msgText\", \"\"], [1, \"col-xs-12\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function MessageEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Subject\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 6, 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Message\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9, 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 3)(15, \"div\", 11)(16, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function MessageEditComponent_Template_button_click_16_listener() {\n        return ctx.onSendMessage();\n      });\n      i0.ɵɵtext(17, \"Send\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function MessageEditComponent_Template_button_click_18_listener() {\n        return ctx.onClear();\n      });\n      i0.ɵɵtext(19, \"Clear\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,OAAO,QAAQ,kBAAkB;;;;;;;AAU1C,OAAM,MAAOC,oBAAoB;EAK/BC,YACUC,cAA8B,EAC9BC,cAA8B;IAD9B,mBAAc,GAAdD,cAAc;IACd,mBAAc,GAAdC,cAAc;EACnB;EAELC,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,UAAU,CAAC,KAAK,CAAC,CAACC,SAAS,CAAEC,OAAgB,IAAI;MACnE,IAAI,CAACC,aAAa,GAAGD,OAAO;IAC9B,CAAC,CAAC;EACJ;EACAE,aAAa;IACX,MAAMC,YAAY,GAAG,IAAI,CAACC,UAAU,CAACC,aAAa,CAACC,KAAK;IACxD,MAAMC,YAAY,GAAG,IAAI,CAACC,UAAU,CAACH,aAAa,CAACC,KAAK;IACxD,MAAMG,EAAE,GAAG,IAAI,CAACd,cAAc,CAACe,QAAQ,EAAE;IACzCC,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;IAEf,MAAMI,UAAU,GAAG,IAAIrB,OAAO,CAC5B,EAAE,EACFW,YAAY,EACZI,YAAY,EACZ,IAAI,CAACN,aAAa,CACnB;IACD,IAAI,CAACN,cAAc,CAACmB,UAAU,CAACD,UAAU,CAAC;EAC5C;EAEAE,OAAO;IACL;IACA,IAAI,CAACX,UAAU,CAACC,aAAa,CAACC,KAAK,GAAG,EAAE;IACxC,IAAI,CAACE,UAAU,CAACH,aAAa,CAACC,KAAK,GAAG,EAAE;EAC1C;;AAlCWb,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAuB;EAAAC;IAAA;;;;;;;;;;;;;;;MCXjCC,8BAAiC;MAKFA,uBAAO;MAAAA,iBAAQ;MACpCA,8BAAqF;MACvFA,iBAAM;MAENA,8BAAkC;MACXA,wBAAO;MAAAA,iBAAQ;MACpCA,gCAAqF;MACvFA,iBAAM;MAERA,+BAAiB;MAEiCA;QAAA,OAASC,mBAAe;MAAA,EAAC;MAACD,qBAAI;MAAAA,iBAAS;MACrFA,mCAAiE;MAApBA;QAAA,OAASC,aAAS;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS","names":["Message","MessageEditComponent","constructor","messageService","contactService","ngOnInit","getContact","subscribe","contact","currentSender","onSendMessage","subjectValue","subjectRef","nativeElement","value","msgTextValue","msgTextRef","id","getMaxId","console","log","newMessage","addMessage","onClear","selectors","viewQuery","i0","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\cms_app\\src\\app\\messages\\message-edit\\message-edit.component.ts","C:\\laragon\\www\\cms_app\\src\\app\\messages\\message-edit\\message-edit.component.html"],"sourcesContent":["import { OnInit, Component, ElementRef, ViewChild } from '@angular/core';\nimport { Message } from '../message.model';\nimport { MessageService } from '../message.service';\nimport { Contact } from 'src/app/contacts/contact.model';\nimport { ContactService } from 'src/app/contacts/contact.service';\n\n@Component({\n  selector: 'cms-message-edit',\n  templateUrl: './message-edit.component.html',\n  styleUrls: ['./message-edit.component.css'],\n})\nexport class MessageEditComponent implements OnInit {\n  @ViewChild('subject') subjectRef: ElementRef;\n  @ViewChild('msgText') msgTextRef: ElementRef;\n  currentSender: Contact;\n\n  constructor(\n    private messageService: MessageService,\n    private contactService: ContactService\n    ) {}\n\n  ngOnInit() {\n    this.contactService.getContact('101').subscribe((contact: Contact) => {\n      this.currentSender = contact;\n    });\n  }\n  onSendMessage() {\n    const subjectValue = this.subjectRef.nativeElement.value;\n    const msgTextValue = this.msgTextRef.nativeElement.value;\n    const id = this.messageService.getMaxId();\n    console.log(id);\n  \n    const newMessage = new Message(\n      '',\n      subjectValue,\n      msgTextValue,\n      this.currentSender\n    );\n    this.messageService.addMessage(newMessage);\n  }\n\n  onClear() {\n    //assign blank values to the subject and msgText\n    this.subjectRef.nativeElement.value = '';\n    this.msgTextRef.nativeElement.value = '';\n  }\n}\n","<div class=\"panel panel-default\">\n  <div class=\"panel-body\">\n    <form id=\"document-edit\">\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"subject\">Subject</label>\n          <input type=\"text\" id=\"subject\" class=\"form-control\" size=\"120\" max=\"120\" #subject />\n        </div>\n\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"message\">Message</label>\n          <input type=\"text\" id=\"message\" class=\"form-control\" max=\"255\" size=\"120\" #msgText />\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <button class=\"btn btn-success\" type=\"button\" (click)=\"onSendMessage()\">Send</button>\n          <button class=\"btn btn-danger\" type=\"button\" (click)=\"onClear()\">Clear</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}