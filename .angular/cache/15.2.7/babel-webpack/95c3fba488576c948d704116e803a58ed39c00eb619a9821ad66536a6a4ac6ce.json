{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Game } from '../game.model';\nlet GameEditComponent = class GameEditComponent {\n  constructor(gameService, teamService,\n  // Inject the Team service\n  route, router) {\n    this.gameService = gameService;\n    this.teamService = teamService;\n    this.route = route;\n    this.router = router;\n    this.game = null;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      let id = params['id'];\n      if (id === undefined || id === null) {\n        this.editMode = false;\n        return;\n      }\n      this.originalGame = this.gameService.getGame(id);\n      if (this.originalGame === undefined || this.originalGame === null) {\n        return;\n      }\n      this.editMode = true;\n      this.game = JSON.parse(JSON.stringify(this.originalGame));\n    });\n    // Fetch the teams when the component initializes\n    this.teams = this.teamService.getTeams();\n  }\n  onSubmit(form) {\n    let values = form.value;\n    let newGame = new Game(null, values.gameDate, values.time, values.homeTeam, values.awayTeam, values.location, values.attendance, values.finalScore, values.recap);\n    if (this.editMode === true) {\n      this.gameService.updateGame(this.originalGame, newGame);\n    } else {\n      this.gameService.addGame(newGame);\n    }\n    this.router.navigate(['/games']);\n  }\n  onCancel() {\n    this.router.navigate(['/games']);\n  }\n};\nGameEditComponent = __decorate([Component({\n  selector: 'wdd430-game-edit',\n  templateUrl: './game-edit.component.html',\n  styleUrls: ['./game-edit.component.css']\n})], GameEditComponent);\nexport { GameEditComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,IAAI,QAAQ,eAAe;AAY7B,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YACUC,WAAwB,EACxBC,WAAwB;EAAE;EAC1BC,KAAqB,EACrBC,MAAc;IAHd,gBAAW,GAAXH,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IARhB,SAAI,GAAS,IAAI;IACjB,aAAQ,GAAY,KAAK;EAQtB;EAEHC,QAAQ;IACN,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACrC,IAAIE,EAAE,GAAGF,MAAM,CAAC,IAAI,CAAC;MACrB,IAAIE,EAAE,KAAKC,SAAS,IAAID,EAAE,KAAK,IAAI,EAAE;QACnC,IAAI,CAACE,QAAQ,GAAG,KAAK;QACrB;;MAEF,IAAI,CAACC,YAAY,GAAG,IAAI,CAACV,WAAW,CAACW,OAAO,CAACJ,EAAE,CAAC;MAChD,IAAI,IAAI,CAACG,YAAY,KAAKF,SAAS,IAAI,IAAI,CAACE,YAAY,KAAK,IAAI,EAAE;QACjE;;MAEF,IAAI,CAACD,QAAQ,GAAG,IAAI;MACpB,IAAI,CAACG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC,IAAI,CAACL,YAAY,CAAC,CAAC;IAC3D,CAAC,CAAC;IAEF;IACA,IAAI,CAACM,KAAK,GAAG,IAAI,CAACf,WAAW,CAACgB,QAAQ,EAAE;EAC1C;EAEAC,QAAQ,CAACC,IAAY;IACnB,IAAIC,MAAM,GAAGD,IAAI,CAACE,KAAK;IACvB,IAAIC,OAAO,GAAG,IAAIzB,IAAI,CACpB,IAAI,EACJuB,MAAM,CAACG,QAAQ,EACfH,MAAM,CAACI,IAAI,EACXJ,MAAM,CAACK,QAAQ,EACfL,MAAM,CAACM,QAAQ,EACfN,MAAM,CAACO,QAAQ,EACfP,MAAM,CAACQ,UAAU,EACjBR,MAAM,CAACS,UAAU,EACjBT,MAAM,CAACU,KAAK,CACb;IACD,IAAI,IAAI,CAACrB,QAAQ,KAAK,IAAI,EAAE;MAC1B,IAAI,CAACT,WAAW,CAAC+B,UAAU,CAAC,IAAI,CAACrB,YAAY,EAAEY,OAAO,CAAC;KACxD,MAAM;MACL,IAAI,CAACtB,WAAW,CAACgC,OAAO,CAACV,OAAO,CAAC;;IAEnC,IAAI,CAACnB,MAAM,CAAC8B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,QAAQ;IACN,IAAI,CAAC/B,MAAM,CAAC8B,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;CACD;AAxDYnC,iBAAiB,eAL7BF,SAAS,CAAC;EACTuC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWvC,iBAAiB,CAwD7B;SAxDYA,iBAAiB","names":["Component","Game","GameEditComponent","constructor","gameService","teamService","route","router","ngOnInit","params","subscribe","id","undefined","editMode","originalGame","getGame","game","JSON","parse","stringify","teams","getTeams","onSubmit","form","values","value","newGame","gameDate","time","homeTeam","awayTeam","location","attendance","finalScore","recap","updateGame","addGame","navigate","onCancel","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\laragon\\www\\wdd-430\\src\\app\\games\\game-edit\\game-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Game } from '../game.model';\nimport { GameService } from '../game.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { TeamService } from '../../team.service'; // Import the Team service\nimport { Team } from '../../teams/team.model';\n\n@Component({\n  selector: 'wdd430-game-edit',\n  templateUrl: './game-edit.component.html',\n  styleUrls: ['./game-edit.component.css'],\n})\nexport class GameEditComponent implements OnInit {\n  originalGame: Game;\n  game: Game = null;\n  editMode: boolean = false;\n  teams: Team[]; // Variable to store the teams\n\n  constructor(\n    private gameService: GameService,\n    private teamService: TeamService, // Inject the Team service\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      let id = params['id'];\n      if (id === undefined || id === null) {\n        this.editMode = false;\n        return;\n      }\n      this.originalGame = this.gameService.getGame(id);\n      if (this.originalGame === undefined || this.originalGame === null) {\n        return;\n      }\n      this.editMode = true;\n      this.game = JSON.parse(JSON.stringify(this.originalGame));\n    });\n\n    // Fetch the teams when the component initializes\n    this.teams = this.teamService.getTeams();\n  }\n\n  onSubmit(form: NgForm) {\n    let values = form.value;\n    let newGame = new Game(\n      null,\n      values.gameDate,\n      values.time,  \n      values.homeTeam,\n      values.awayTeam,\n      values.location,\n      values.attendance,\n      values.finalScore,\n      values.recap\n    );\n    if (this.editMode === true) {\n      this.gameService.updateGame(this.originalGame, newGame);\n    } else {\n      this.gameService.addGame(newGame);\n    }\n    this.router.navigate(['/games']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/games']);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}