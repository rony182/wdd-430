{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TeamService {\n  constructor(http) {\n    this.http = http;\n    this.teams = [];\n    this.teamsListChangedEvent = new Subject();\n    this.teamSelectedEvent = new EventEmitter();\n    this.teamChangedEvent = new EventEmitter();\n    this.getTeams();\n  }\n  getTeams() {\n    this.http.get('http://localhost:3000/teams').subscribe(responseData => {\n      this.teams = responseData.teams;\n      this.sortAndSend();\n    });\n  }\n}\nTeamService.ɵfac = function TeamService_Factory(t) {\n  return new (t || TeamService)(i0.ɵɵinject(i1.HttpClient));\n};\nTeamService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TeamService,\n  factory: TeamService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;AAExD,SAASC,OAAO,QAAQ,MAAM;;;AAM9B,OAAM,MAAOC,WAAW;EAMpBC,YACYC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANhB,UAAK,GAAW,EAAE;IAClB,0BAAqB,GAAG,IAAIH,OAAO,EAAU;IAE7C,sBAAiB,GAAG,IAAID,YAAY,EAAQ;IAC5C,qBAAgB,GAAG,IAAIA,YAAY,EAAU;IAIzC,IAAI,CAACK,QAAQ,EAAE;EAClB;EAEDA,QAAQ;IACJ,IAAI,CAACD,IAAI,CAACE,GAAG,CAAqC,6BAA6B,CAAC,CAC/EC,SAAS,CACLC,YAAY,IAAI;MACb,IAAI,CAACC,KAAK,GAAGD,YAAY,CAACC,KAAK;MAC/B,IAAI,CAACC,WAAW,EAAE;IACtB,CAAC,CACJ;EACL;;AApBSR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAS,SAAXT,WAAW;EAAAU,YAFR;AAAM","names":["EventEmitter","Subject","TeamService","constructor","http","getTeams","get","subscribe","responseData","teams","sortAndSend","factory","providedIn"],"sourceRoot":"","sources":["C:\\laragon\\www\\wdd-430\\src\\app\\teams\\team.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { Team } from \"./team.model\";\r\nimport { Subject } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TeamService {\r\n    teams: Team[] = [];\r\n    teamsListChangedEvent = new Subject<Team[]>();\r\n    maxTeamId: number;\r\n    teamSelectedEvent = new EventEmitter<Team>();\r\n    teamChangedEvent = new EventEmitter<Team[]>();\r\n    constructor(\r\n        private http: HttpClient\r\n    ) {\r\n        this.getTeams();\r\n     }\r\n\r\n    getTeams() {\r\n        this.http.get<{ message: string, teams: Team[] }>('http://localhost:3000/teams')\r\n        .subscribe(\r\n            (responseData) => {\r\n                this.teams = responseData.teams;\r\n                this.sortAndSend();\r\n            }\r\n        );\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}