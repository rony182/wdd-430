{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GameService {\n  constructor(http) {\n    this.http = http;\n    this.gameListChangedEvent = new Subject();\n    this.games = [];\n    this.gameSelectedEvent = new EventEmitter();\n    this.gameChangedEvent = new EventEmitter();\n    this.getGames();\n  }\n  getGames() {\n    this.http.get('http://localhost:3000/games').subscribe(responseData => {\n      this.games = responseData.games;\n      this.sortAndSend();\n    });\n  }\n  getGame(id) {\n    for (let game of this.games) {\n      if (game.id == id) {\n        return game;\n      }\n    }\n    return null;\n  }\n  deleteGame(game) {\n    if (!game) {\n      return;\n    }\n    const pos = this.games.findIndex(d => d.id === game.id);\n    sortAndSend();\n    {\n      this.games.sort((a, b) => a.gameDate > b.gameDate ? 1 : -1);\n      this.gameListChangedEvent.next(this.games.slice());\n    }\n  }\n}\nGameService.ɵfac = function GameService_Factory(t) {\n  return new (t || GameService)(i0.ɵɵinject(i1.HttpClient));\n};\nGameService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GameService,\n  factory: GameService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;AACxD,SAASC,OAAO,QAAQ,MAAM;;;AAO9B,OAAM,MAAOC,WAAW;EAOtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANxB,yBAAoB,GAAG,IAAIH,OAAO,EAAU;IAC5C,UAAK,GAAW,EAAE;IAElB,sBAAiB,GAAG,IAAID,YAAY,EAAQ;IAC5C,qBAAgB,GAAG,IAAIA,YAAY,EAAU;IAG3C,IAAI,CAACK,QAAQ,EAAE;EACjB;EAEAA,QAAQ;IACN,IAAI,CAACD,IAAI,CACNE,GAAG,CAAqC,6BAA6B,CAAC,CACtEC,SAAS,CAAEC,YAAY,IAAI;MAC1B,IAAI,CAACC,KAAK,GAAGD,YAAY,CAACC,KAAK;MAC/B,IAAI,CAACC,WAAW,EAAE;IACpB,CAAC,CAAC;EACN;EAEAC,OAAO,CAACC,EAAU;IAChB,KAAK,IAAIC,IAAI,IAAI,IAAI,CAACJ,KAAK,EAAE;MAC3B,IAAII,IAAI,CAACD,EAAE,IAAIA,EAAE,EAAE;QACjB,OAAOC,IAAI;;;IAGf,OAAO,IAAI;EACb;EAEEC,UAAU,CAACD,IAAU;IACrB,IAAI,CAACA,IAAI,EAAE;MACP;;IAGJ,MAAME,GAAG,GAAG,IAAI,CAACN,KAAK,CAACO,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACL,EAAE,KAAKC,IAAI,CAACD,EAAE,CAAC;IAGzDF,WAAW,EAAE;IAAC;MACZ,IAAI,CAACD,KAAK,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACE,QAAQ,GAAGD,CAAC,CAACC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;MAC7D,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAACd,KAAK,CAACe,KAAK,EAAE,CAAC;;EAEtD;;AAzCatB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAuB,SAAXvB,WAAW;EAAAwB,YAFV;AAAM","names":["EventEmitter","Subject","GameService","constructor","http","getGames","get","subscribe","responseData","games","sortAndSend","getGame","id","game","deleteGame","pos","findIndex","d","sort","a","b","gameDate","gameListChangedEvent","next","slice","factory","providedIn"],"sourceRoot":"","sources":["C:\\laragon\\www\\wdd-430\\src\\app\\games\\game.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { Game } from './game.model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GameService {\r\n  gameListChangedEvent = new Subject<Game[]>();\r\n  games: Game[] = [];\r\n  maxGameId: number;\r\n  gameSelectedEvent = new EventEmitter<Game>();\r\n  gameChangedEvent = new EventEmitter<Game[]>();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.getGames();\r\n  }\r\n\r\n  getGames() {\r\n    this.http\r\n      .get<{ message: string; games: Game[] }>('http://localhost:3000/games')\r\n      .subscribe((responseData) => {\r\n        this.games = responseData.games;\r\n        this.sortAndSend();\r\n      });\r\n  }\r\n\r\n  getGame(id: number): Game {\r\n    for (let game of this.games) {\r\n      if (game.id == id) {\r\n        return game;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n    deleteGame(game: Game) {\r\n    if (!game) {\r\n        return;\r\n    }\r\n\r\n    const pos = this.games.findIndex(d => d.id === game.id);\r\n    \r\n\r\n  sortAndSend() {\r\n    this.games.sort((a, b) => (a.gameDate > b.gameDate ? 1 : -1));\r\n    this.gameListChangedEvent.next(this.games.slice());\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}