{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TeamService {\n  constructor(http) {\n    this.http = http;\n    this.teams = [];\n    this.teamsListChangedEvent = new Subject();\n    this.teamSelectedEvent = new EventEmitter();\n    this.teamChangedEvent = new EventEmitter();\n    this.getTeams().subscribe(teams => {\n      this.teams = teams;\n      // this.sortAndSend();\n    }, error => {\n      // Handle the error here\n      console.log(error);\n    });\n  }\n  getTeams() {\n    return this.http.get('http://localhost:3000/teams');\n  }\n  sortAndSend() {\n    this.teams.sort((a, b) => a.teamName > b.teamName ? 1 : b.teamName > a.teamName ? -1 : 0);\n    this.teamsListChangedEvent.next(this.teams.slice());\n  }\n}\nTeamService.ɵfac = function TeamService_Factory(t) {\n  return new (t || TeamService)(i0.ɵɵinject(i1.HttpClient));\n};\nTeamService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TeamService,\n  factory: TeamService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;AAExD,SAAqBC,OAAO,QAAQ,MAAM;;;AAM1C,OAAM,MAAOC,WAAW;EAMpBC,YACYC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IANhB,UAAK,GAAW,EAAE;IAClB,0BAAqB,GAAG,IAAIH,OAAO,EAAU;IAE7C,sBAAiB,GAAG,IAAID,YAAY,EAAQ;IAC5C,qBAAgB,GAAG,IAAIA,YAAY,EAAU;IAIzC,IAAI,CAACK,QAAQ,EAAE,CAACC,SAAS,CACpBC,KAAa,IAAI;MACd,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClB;IACJ,CAAC,EACAC,KAAK,IAAI;MACN;MACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB,CAAC,CACJ;EACL;EAEAH,QAAQ;IACJ,OAAO,IAAI,CAACD,IAAI,CAACO,GAAG,CAAS,6BAA6B,CAAC;EAC/D;EAEAC,WAAW;IACP,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,QAAQ,GAAGD,CAAC,CAACC,QAAQ,GAAG,CAAC,GAAGD,CAAC,CAACC,QAAQ,GAAGF,CAAC,CAACE,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACzF,IAAI,CAACC,qBAAqB,CAACC,IAAI,CAAC,IAAI,CAACX,KAAK,CAACY,KAAK,EAAE,CAAC;EACvD;;AA5BSjB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFR;AAAM","names":["EventEmitter","Subject","TeamService","constructor","http","getTeams","subscribe","teams","error","console","log","get","sortAndSend","sort","a","b","teamName","teamsListChangedEvent","next","slice","factory","providedIn"],"sourceRoot":"","sources":["C:\\laragon\\www\\wdd-430\\src\\app\\teams\\team.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from \"@angular/core\";\r\nimport { Team } from \"./team.model\";\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TeamService {\r\n    teams: Team[] = [];\r\n    teamsListChangedEvent = new Subject<Team[]>();\r\n    maxTeamId: number;\r\n    teamSelectedEvent = new EventEmitter<Team>();\r\n    teamChangedEvent = new EventEmitter<Team[]>();\r\n    constructor(\r\n        private http: HttpClient\r\n    ) {\r\n        this.getTeams().subscribe(\r\n            (teams: Team[]) => {\r\n                this.teams = teams;\r\n                // this.sortAndSend();\r\n            },\r\n            (error) => {\r\n                // Handle the error here\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    getTeams(): Observable<Team[]> {\r\n        return this.http.get<Team[]>('http://localhost:3000/teams');\r\n    }\r\n\r\n    sortAndSend() {\r\n        this.teams.sort((a, b) => a.teamName > b.teamName ? 1 : b.teamName > a.teamName ? -1 : 0);\r\n        this.teamsListChangedEvent.next(this.teams.slice());\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}