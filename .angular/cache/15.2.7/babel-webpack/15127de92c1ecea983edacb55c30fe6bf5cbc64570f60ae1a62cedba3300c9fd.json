{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MessageService = /*#__PURE__*/(() => {\n  class MessageService {\n    constructor(http) {\n      this.http = http;\n      this.messageChangeEvent = new Subject();\n      this.messages = [];\n      this.http.get('https://cms-project-1ccee-default-rtdb.firebaseio.com/messages.json').subscribe(messages => {\n        this.messages = messages;\n        this.maxMessageId = this.getMaxId();\n        console.log(this.maxMessageId);\n        this.messages.sort((a, b) => a.id > b.id ? 1 : b.id > a.id ? -1 : 0);\n        this.messageChangeEvent.next(this.messages.slice());\n      });\n    }\n    getMessages() {\n      return this.messages.slice();\n    }\n    getMessage(id) {\n      return this.messages.find(message => message.id === id) || null;\n    }\n    getMaxId() {\n      let maxId = 0;\n      this.messages.forEach(message => {\n        if (message.id > maxId) {\n          maxId = message.id;\n        }\n      });\n      return maxId;\n    }\n    addMessage(message) {\n      this.messages.push(message);\n      this.maxMessageId = this.getMaxId();\n      console.log(this.maxMessageId);\n      this.storeMessages();\n    }\n    storeMessages() {\n      const messages = JSON.stringify(this.messages);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      this.http.put('https://cms-project-1ccee-default-rtdb.firebaseio.com/messages.json', messages, {\n        headers: headers\n      }).subscribe(() => {\n        this.messageChangeEvent.next(this.messages.slice());\n      });\n    }\n  }\n  MessageService.ɵfac = function MessageService_Factory(t) {\n    return new (t || MessageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  MessageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MessageService,\n    factory: MessageService.ɵfac,\n    providedIn: 'root'\n  });\n  return MessageService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}