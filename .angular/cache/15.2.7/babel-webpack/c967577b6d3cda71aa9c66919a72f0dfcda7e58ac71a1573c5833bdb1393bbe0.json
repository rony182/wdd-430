{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Game } from '../game.model';\nlet GameEditComponent = class GameEditComponent {\n  constructor(gameService, teamService,\n  // Inject the Team service\n  route, router) {\n    this.gameService = gameService;\n    this.teamService = teamService;\n    this.route = route;\n    this.router = router;\n    this.game = null;\n    this.editMode = false;\n    // Subscribe to the teamsListChangedEvent\n    this.teamService.teamListChangedEvent.subscribe(teams => {\n      this.teams = teams;\n    });\n  }\n  ngOnInit() {\n    this.teamService.teamListChangedEvent.subscribe(teams => {\n      this.teams = teams;\n      console.log(this.teams);\n      this.initializeGame();\n    });\n    this.teamService.getTeams(); // Move getTeams() call here\n    this.route.params.subscribe(params => {\n      let id = params['id'];\n      if (id === undefined || id === null) {\n        this.editMode = false;\n        return; // Remove the teamService.getTeams() call from here\n      }\n\n      this.gameService.gameListChangedEvent.subscribe(games => {\n        this.originalGame = this.gameService.getGame(id);\n        if (this.originalGame === undefined || this.originalGame === null) {\n          return;\n        }\n        this.editMode = true;\n        this.game = JSON.parse(JSON.stringify(this.originalGame));\n        this.initializeGame(); // Call initializeGame() after assigning this.game\n      });\n\n      this.gameService.getGames();\n    });\n  }\n  initializeGame() {\n    if (this.teams.length > 0 && this.game) {\n      this.game = {\n        ...this.game,\n        homeTeam: this.teams.find(team => team.id === this.game?.homeTeam?.id),\n        awayTeam: this.teams.find(team => team.id === this.game?.awayTeam?.id)\n      };\n      this.game.recap = this.game.recap || ''; // Initialize recap with an empty string if it is null\n    }\n  }\n\n  onSubmit(form) {\n    let values = form.value;\n    let newGame = new Game(null, values.gameDate, values.time, values.homeTeam, values.awayTeam, values.location, values.attendance, values.finalScore, values.recap);\n    if (this.editMode === true) {\n      this.gameService.updateGame(this.originalGame, newGame);\n    } else {\n      this.gameService.addGame(newGame);\n    }\n    this.router.navigate(['/games']);\n  }\n  onCancel() {\n    this.router.navigate(['/games']);\n  }\n  getHomeTeamId() {\n    return this.game?.homeTeam?.id;\n  }\n  getAwayTeamId() {\n    return this.game?.awayTeam?.id;\n  }\n  isSelectedHomeTeam(team) {\n    return team.id === this.game?.homeTeam?.id;\n  }\n  isSelectedAwayTeam(team) {\n    return team.id === this.game?.awayTeam?.id;\n  }\n};\nGameEditComponent = __decorate([Component({\n  selector: 'wdd430-game-edit',\n  templateUrl: './game-edit.component.html',\n  styleUrls: ['./game-edit.component.css']\n})], GameEditComponent);\nexport { GameEditComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,IAAI,QAAQ,eAAe;AAY7B,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YACUC,WAAwB,EACxBC,WAAwB;EAAE;EAC1BC,KAAqB,EACrBC,MAAc;IAHd,gBAAW,GAAXH,WAAW;IACX,gBAAW,GAAXC,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IARhB,SAAI,GAAS,IAAI;IACjB,aAAQ,GAAY,KAAK;IASvB;IACA,IAAI,CAACF,WAAW,CAACG,oBAAoB,CAACC,SAAS,CAAEC,KAAa,IAAI;MAChE,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACN,WAAW,CAACG,oBAAoB,CAACC,SAAS,CAAEC,KAAa,IAAI;MAChE,IAAI,CAACA,KAAK,GAAGA,KAAK;MAClBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,KAAK,CAAC;MACvB,IAAI,CAACI,cAAc,EAAE;IACvB,CAAC,CAAC;IAEF,IAAI,CAACT,WAAW,CAACU,QAAQ,EAAE,CAAC,CAAC;IAE7B,IAAI,CAACT,KAAK,CAACU,MAAM,CAACP,SAAS,CAAEO,MAAM,IAAI;MACrC,IAAIC,EAAE,GAAGD,MAAM,CAAC,IAAI,CAAC;MACrB,IAAIC,EAAE,KAAKC,SAAS,IAAID,EAAE,KAAK,IAAI,EAAE;QACnC,IAAI,CAACE,QAAQ,GAAG,KAAK;QACrB,OAAO,CAAC;;;MAGV,IAAI,CAACf,WAAW,CAACgB,oBAAoB,CAACX,SAAS,CAAEY,KAAa,IAAI;QAChE,IAAI,CAACC,YAAY,GAAG,IAAI,CAAClB,WAAW,CAACmB,OAAO,CAACN,EAAE,CAAC;QAChD,IAAI,IAAI,CAACK,YAAY,KAAKJ,SAAS,IAAI,IAAI,CAACI,YAAY,KAAK,IAAI,EAAE;UACjE;;QAEF,IAAI,CAACH,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACK,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC,IAAI,CAACL,YAAY,CAAC,CAAC;QACzD,IAAI,CAACR,cAAc,EAAE,CAAC,CAAC;MACzB,CAAC,CAAC;;MAEF,IAAI,CAACV,WAAW,CAACwB,QAAQ,EAAE;IAC7B,CAAC,CAAC;EACJ;EAEAd,cAAc;IACZ,IAAI,IAAI,CAACJ,KAAK,CAACmB,MAAM,GAAG,CAAC,IAAI,IAAI,CAACL,IAAI,EAAE;MACtC,IAAI,CAACA,IAAI,GAAG;QACV,GAAG,IAAI,CAACA,IAAI;QACZM,QAAQ,EAAE,IAAI,CAACpB,KAAK,CAACqB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACf,EAAE,KAAK,IAAI,CAACO,IAAI,EAAEM,QAAQ,EAAEb,EAAE,CAAC;QACxEgB,QAAQ,EAAE,IAAI,CAACvB,KAAK,CAACqB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACf,EAAE,KAAK,IAAI,CAACO,IAAI,EAAES,QAAQ,EAAEhB,EAAE;OACxE;MACD,IAAI,CAACO,IAAI,CAACU,KAAK,GAAG,IAAI,CAACV,IAAI,CAACU,KAAK,IAAI,EAAE,CAAC,CAAC;;EAE7C;;EAEAC,QAAQ,CAACC,IAAY;IACnB,IAAIC,MAAM,GAAGD,IAAI,CAACE,KAAK;IACvB,IAAIC,OAAO,GAAG,IAAItC,IAAI,CACpB,IAAI,EACJoC,MAAM,CAACG,QAAQ,EACfH,MAAM,CAACI,IAAI,EACXJ,MAAM,CAACP,QAAQ,EACfO,MAAM,CAACJ,QAAQ,EACfI,MAAM,CAACK,QAAQ,EACfL,MAAM,CAACM,UAAU,EACjBN,MAAM,CAACO,UAAU,EACjBP,MAAM,CAACH,KAAK,CACb;IACD,IAAI,IAAI,CAACf,QAAQ,KAAK,IAAI,EAAE;MAC1B,IAAI,CAACf,WAAW,CAACyC,UAAU,CAAC,IAAI,CAACvB,YAAY,EAAEiB,OAAO,CAAC;KACxD,MAAM;MACL,IAAI,CAACnC,WAAW,CAAC0C,OAAO,CAACP,OAAO,CAAC;;IAEnC,IAAI,CAAChC,MAAM,CAACwC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,QAAQ;IACN,IAAI,CAACzC,MAAM,CAACwC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAE,aAAa;IACX,OAAO,IAAI,CAACzB,IAAI,EAAEM,QAAQ,EAAEb,EAAE;EAChC;EAEAiC,aAAa;IACX,OAAO,IAAI,CAAC1B,IAAI,EAAES,QAAQ,EAAEhB,EAAE;EAChC;EAEAkC,kBAAkB,CAACnB,IAAU;IAC3B,OAAOA,IAAI,CAACf,EAAE,KAAK,IAAI,CAACO,IAAI,EAAEM,QAAQ,EAAEb,EAAE;EAC5C;EAEAmC,kBAAkB,CAACpB,IAAU;IAC3B,OAAOA,IAAI,CAACf,EAAE,KAAK,IAAI,CAACO,IAAI,EAAES,QAAQ,EAAEhB,EAAE;EAC5C;CAED;AApGYf,iBAAiB,eAL7BF,SAAS,CAAC;EACTqD,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,GACWrD,iBAAiB,CAoG7B;SApGYA,iBAAiB","names":["Component","Game","GameEditComponent","constructor","gameService","teamService","route","router","teamListChangedEvent","subscribe","teams","ngOnInit","console","log","initializeGame","getTeams","params","id","undefined","editMode","gameListChangedEvent","games","originalGame","getGame","game","JSON","parse","stringify","getGames","length","homeTeam","find","team","awayTeam","recap","onSubmit","form","values","value","newGame","gameDate","time","location","attendance","finalScore","updateGame","addGame","navigate","onCancel","getHomeTeamId","getAwayTeamId","isSelectedHomeTeam","isSelectedAwayTeam","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\laragon\\www\\wdd-430\\src\\app\\games\\game-edit\\game-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Game } from '../game.model';\nimport { GameService } from '../game.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Team } from '../../teams/team.model';\nimport { TeamService } from '../../teams/team.service';\n\n@Component({\n  selector: 'wdd430-game-edit',\n  templateUrl: './game-edit.component.html',\n  styleUrls: ['./game-edit.component.css'],\n})\nexport class GameEditComponent implements OnInit {\n  originalGame: Game;\n  game: Game = null;\n  editMode: boolean = false;\n  teams: Team[]; // Variable to store the teams\n\n  constructor(\n    private gameService: GameService,\n    private teamService: TeamService, // Inject the Team service\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    // Subscribe to the teamsListChangedEvent\n    this.teamService.teamListChangedEvent.subscribe((teams: Team[]) => {\n      this.teams = teams;\n    });\n  }\n\n  ngOnInit() {\n    this.teamService.teamListChangedEvent.subscribe((teams: Team[]) => {\n      this.teams = teams;\n      console.log(this.teams);\n      this.initializeGame();\n    });\n  \n    this.teamService.getTeams(); // Move getTeams() call here\n  \n    this.route.params.subscribe((params) => {\n      let id = params['id'];\n      if (id === undefined || id === null) {\n        this.editMode = false;\n        return; // Remove the teamService.getTeams() call from here\n      }\n  \n      this.gameService.gameListChangedEvent.subscribe((games: Game[]) => {\n        this.originalGame = this.gameService.getGame(id);\n        if (this.originalGame === undefined || this.originalGame === null) {\n          return;\n        }\n        this.editMode = true;\n        this.game = JSON.parse(JSON.stringify(this.originalGame));\n        this.initializeGame(); // Call initializeGame() after assigning this.game\n      });\n  \n      this.gameService.getGames();\n    });\n  }\n  \n  initializeGame() {\n    if (this.teams.length > 0 && this.game) {\n      this.game = {\n        ...this.game,\n        homeTeam: this.teams.find((team) => team.id === this.game?.homeTeam?.id),\n        awayTeam: this.teams.find((team) => team.id === this.game?.awayTeam?.id)\n      };\n      this.game.recap = this.game.recap || ''; // Initialize recap with an empty string if it is null\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    let values = form.value;\n    let newGame = new Game(\n      null,\n      values.gameDate,\n      values.time,  \n      values.homeTeam,\n      values.awayTeam,\n      values.location,\n      values.attendance,\n      values.finalScore,\n      values.recap\n    );\n    if (this.editMode === true) {\n      this.gameService.updateGame(this.originalGame, newGame);\n    } else {\n      this.gameService.addGame(newGame);\n    }\n    this.router.navigate(['/games']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/games']);\n  }\n\n  getHomeTeamId() {\n    return this.game?.homeTeam?.id;\n  }\n  \n  getAwayTeamId() {\n    return this.game?.awayTeam?.id;\n  }\n  \n  isSelectedHomeTeam(team: Team) {\n    return team.id === this.game?.homeTeam?.id;\n  }\n  \n  isSelectedAwayTeam(team: Team) {\n    return team.id === this.game?.awayTeam?.id;\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}