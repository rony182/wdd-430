{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Player } from '../player.model';\nlet PlayerEditComponent = class PlayerEditComponent {\n  constructor(playerService, route, router, teamService // Inject the Team service\n  ) {\n    this.playerService = playerService;\n    this.route = route;\n    this.router = router;\n    this.teamService = teamService;\n    this.player = null;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    this.teamService.teamListChangedEvent.subscribe(teams => {\n      this.teams = teams;\n      this.teamMap = this.createTeamMap(teams);\n      console.log(this.teamMap);\n      this.initializePlayer();\n    });\n    this.route.params.subscribe(params => {\n      let id = params['id'];\n      if (id === undefined || id === null) {\n        this.editMode = false;\n        return;\n      }\n      this.playerService.playerListChangedEvent.subscribe(players => {\n        this.originalPlayer = this.playerService.getPlayer(id);\n        if (this.originalPlayer === undefined || this.originalPlayer === null) {\n          return;\n        }\n        this.editMode = true;\n        this.player = JSON.parse(JSON.stringify(this.originalPlayer));\n        this.initializePlayer();\n      });\n      this.playerService.getPlayers();\n    });\n  }\n  onSubmit(form) {\n    let values = form.value;\n    let team = this.teamMap[values.club];\n    let newPlayer = new Player(null, values.playerName, values.position, values.height, values.weight, values.birthDate, values.nationality, values.experienceYears, team);\n    if (this.editMode) {\n      this.playerService.updatePlayer(this.originalPlayer, newPlayer);\n    } else {\n      this.playerService.addPlayer(newPlayer);\n    }\n    this.router.navigate(['/players']);\n  }\n  onCancel() {\n    this.router.navigate(['/players']);\n  }\n  createTeamMap(teams) {\n    let map = {};\n    for (let team of teams) {\n      map[team.id] = team;\n    }\n    return map;\n  }\n  initializePlayer() {\n    if (this.teams.length > 0) {\n      this.player.club = this.teams.find(team => team.id === this.player.club.id);\n    } else {\n      this.player = new Player(null, null, null, null, null, null, null, null, null);\n    }\n  }\n  getCurrentDate() {\n    const currentDate = new Date();\n    const year = currentDate.getFullYear();\n    const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n    const day = currentDate.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n};\nPlayerEditComponent = __decorate([Component({\n  selector: 'wdd430-player-edit',\n  templateUrl: './player-edit.component.html',\n  styleUrls: ['./player-edit.component.css']\n})], PlayerEditComponent);\nexport { PlayerEditComponent };","map":{"version":3,"mappings":"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","names":["Component","Player","PlayerEditComponent","constructor","playerService","route","router","teamService","ngOnInit","teamListChangedEvent","subscribe","teams","teamMap","createTeamMap","console","log","initializePlayer","params","id","undefined","editMode","playerListChangedEvent","players","originalPlayer","getPlayer","player","JSON","parse","stringify","getPlayers","onSubmit","form","values","value","team","club","newPlayer","playerName","position","height","weight","birthDate","nationality","experienceYears","updatePlayer","addPlayer","navigate","onCancel","map","length","find","getCurrentDate","currentDate","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\laragon\\www\\wdd-430\\src\\app\\players\\player-edit\\player-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Player } from '../player.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlayerService } from '../player.service';\nimport { NgForm } from '@angular/forms';\nimport { Team } from '../../teams/team.model';\nimport { TeamService } from '../../teams/team.service';\n\n@Component({\n  selector: 'wdd430-player-edit',\n  templateUrl: './player-edit.component.html',\n  styleUrls: ['./player-edit.component.css'],\n})\nexport class PlayerEditComponent implements OnInit {\n  originalPlayer: Player;\n  player: Player = null;\n  editMode: boolean = false;\n  players: Player[]; // Variable to store the players\n  teams: Team[]; // Variable to store the teams\n\n  teamMap: { [id: number]: Team }; // Map to store teams by ID\n  teamNumber: number; // Update the type to number\n\n  constructor(\n    private playerService: PlayerService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private teamService: TeamService // Inject the Team service\n  ) {}\n\n  ngOnInit() {\n    this.teamService.teamListChangedEvent.subscribe((teams: Team[]) => {\n      this.teams = teams;\n      this.teamMap = this.createTeamMap(teams);\n      console.log(this.teamMap);\n      this.initializePlayer();\n    });\n    this.route.params.subscribe((params) => {\n      let id = params['id'];\n      if (id === undefined || id === null) {\n        this.editMode = false;\n        return;\n      }\n\n      this.playerService.playerListChangedEvent.subscribe(\n        (players: Player[]) => {\n          this.originalPlayer = this.playerService.getPlayer(id);\n          if (\n            this.originalPlayer === undefined ||\n            this.originalPlayer === null\n          ) {\n            return;\n          }\n          this.editMode = true;\n          this.player = JSON.parse(JSON.stringify(this.originalPlayer));\n          this.initializePlayer();\n        }\n      );\n      this.playerService.getPlayers();\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    let values = form.value;\n    let team = this.teamMap[values.club];\n    let newPlayer = new Player(\n      null,\n      values.playerName,\n      values.position,\n      values.height,\n      values.weight,\n      values.birthDate,\n      values.nationality,\n      values.experienceYears,\n      team\n    );\n    if (this.editMode) {\n      this.playerService.updatePlayer(this.originalPlayer, newPlayer);\n    } else {\n      this.playerService.addPlayer(newPlayer);\n    }\n    this.router.navigate(['/players']);\n  }\n\n  onCancel() {\n    this.router.navigate(['/players']);\n  }\n\n  private createTeamMap(teams: Team[]): { [id: number]: Team } {\n    let map: { [id: number]: Team } = {};\n    for (let team of teams) {\n      map[team.id] = team;\n    }\n    return map;\n  }\n\n  private initializePlayer() {\n    if (this.teams.length > 0) {\n      this.player.club = this.teams.find(\n        (team) => team.id === this.player.club.id\n      );\n    } else {\n      this.player = new Player(\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null\n      );\n    }\n  }\n  getCurrentDate(): string {\n    const currentDate = new Date();\n    const year = currentDate.getFullYear();\n    const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n    const day = currentDate.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}