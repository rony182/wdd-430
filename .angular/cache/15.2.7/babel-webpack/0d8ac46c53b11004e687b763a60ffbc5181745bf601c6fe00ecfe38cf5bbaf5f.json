{"ast":null,"code":"import { Game } from '../game.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../game.service\";\nimport * as i2 from \"../../teams/team.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction GameEditComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"span\");\n    i0.ɵɵtext(2, \"Please enter a valid time in the format HH:MM (e.g., 10:00)\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameEditComponent_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const team_r19 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", team_r19.id)(\"selected\", team_r19.id == (ctx_r5.game == null ? null : ctx_r5.game.homeTeam == null ? null : ctx_r5.game.homeTeam.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(team_r19.teamName);\n  }\n}\nfunction GameEditComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"span\");\n    i0.ɵɵtext(2, \"Please enter a valid homeTeam\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameEditComponent_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const team_r20 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", team_r20.id)(\"selected\", team_r20.id == (ctx_r8.game == null ? null : ctx_r8.game.awayTeam == null ? null : ctx_r8.game.awayTeam.id));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(team_r20.teamName);\n  }\n}\nfunction GameEditComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"span\");\n    i0.ɵɵtext(2, \"Please enter a valid awayTeam\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameEditComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"span\");\n    i0.ɵɵtext(2, \"Please enter a valid location\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameEditComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"span\");\n    i0.ɵɵtext(2, \"Please enter a valid attendance between 0 and 150,000\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameEditComponent_div_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"span\");\n    i0.ɵɵtext(2, \"Please enter a valid final score in the format '10-1'\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameEditComponent_div_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"span\");\n    i0.ɵɵtext(2, \"Please enter a valid recap\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction GameEditComponent_div_70_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Date is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameEditComponent_div_70_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Time is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameEditComponent_div_70_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Home Team is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameEditComponent_div_70_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Away Team is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameEditComponent_div_70_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Location is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameEditComponent_div_70_li_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Attendance is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameEditComponent_div_70_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Final Score is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameEditComponent_div_70_li_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Recap is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GameEditComponent_div_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 37)(1, \"div\")(2, \"p\");\n    i0.ɵɵtext(3, \"Please fix the following errors:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\");\n    i0.ɵɵtemplate(5, GameEditComponent_div_70_li_5_Template, 2, 0, \"li\", 39);\n    i0.ɵɵtemplate(6, GameEditComponent_div_70_li_6_Template, 2, 0, \"li\", 39);\n    i0.ɵɵtemplate(7, GameEditComponent_div_70_li_7_Template, 2, 0, \"li\", 39);\n    i0.ɵɵtemplate(8, GameEditComponent_div_70_li_8_Template, 2, 0, \"li\", 39);\n    i0.ɵɵtemplate(9, GameEditComponent_div_70_li_9_Template, 2, 0, \"li\", 39);\n    i0.ɵɵtemplate(10, GameEditComponent_div_70_li_10_Template, 2, 0, \"li\", 39);\n    i0.ɵɵtemplate(11, GameEditComponent_div_70_li_11_Template, 2, 0, \"li\", 39);\n    i0.ɵɵtemplate(12, GameEditComponent_div_70_li_12_Template, 2, 0, \"li\", 39);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(9);\n    const _r2 = i0.ɵɵreference(16);\n    const _r4 = i0.ɵɵreference(23);\n    const _r7 = i0.ɵɵreference(31);\n    const _r10 = i0.ɵɵreference(39);\n    const _r12 = i0.ɵɵreference(46);\n    const _r14 = i0.ɵɵreference(53);\n    const _r16 = i0.ɵɵreference(60);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !_r1.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !_r2.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !_r4.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !_r7.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !_r10.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !_r12.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !_r14.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !_r16.valid);\n  }\n}\nexport class GameEditComponent {\n  constructor(gameService, teamService,\n  // Inject the Team service\n  route, router) {\n    this.gameService = gameService;\n    this.teamService = teamService;\n    this.route = route;\n    this.router = router;\n    this.game = null;\n    this.editMode = false;\n    // Subscribe to the teamsListChangedEvent\n    this.teamService.teamListChangedEvent.subscribe(teams => {\n      this.teams = teams;\n      this.teamMap = this.createTeamMap(teams);\n      console.log(this.teamMap);\n    });\n  }\n  ngOnInit() {\n    this.teamService.teamListChangedEvent.subscribe(teams => {\n      this.teams = teams;\n      this.initializeGame();\n    });\n    this.teamService.getTeams(); // Move getTeams() call here\n    this.route.params.subscribe(params => {\n      let id = params['id'];\n      if (id === undefined || id === null) {\n        this.editMode = false;\n        return; // Remove the teamService.getTeams() call from here\n      }\n\n      this.gameService.gameListChangedEvent.subscribe(games => {\n        this.originalGame = this.gameService.getGame(id);\n        if (this.originalGame === undefined || this.originalGame === null) {\n          return;\n        }\n        this.editMode = true;\n        this.game = JSON.parse(JSON.stringify(this.originalGame));\n        this.initializeGame(); // Call initializeGame() after assigning this.game\n      });\n\n      this.gameService.getGames();\n    });\n  }\n  initializeGame() {\n    if (this.teams.length > 0 && this.game) {\n      this.game.homeTeam = this.teams.find(team => team.id === this.game.homeTeam?.id);\n      this.game.awayTeam = this.teams.find(team => team.id === this.game.awayTeam?.id);\n      this.game.recap = this.game.recap || ''; // Initialize recap with an empty string if it is null\n    } else {\n      this.game = {\n        id: null,\n        gameDate: null,\n        time: null,\n        homeTeam: null,\n        awayTeam: null,\n        location: null,\n        attendance: null,\n        finalScore: null,\n        recap: ''\n      };\n    }\n  }\n  onSubmit(form) {\n    let values = form.value;\n    // Extract the id values from game.homeTeam and game.awayTeam objects\n    let homeTeamId = values.homeTeam;\n    let awayTeamId = values.awayTeam;\n    // Retrieve the corresponding team objects based on the IDs\n    let homeTeam = this.teamMap[homeTeamId];\n    let awayTeam = this.teamMap[awayTeamId];\n    let newGame = new Game(null, values.gameDate, values.time, homeTeam, awayTeam, values.location, values.attendance, values.finalScore, values.recap);\n    if (this.editMode === true) {\n      this.gameService.updateGame(this.originalGame, newGame);\n    } else {\n      this.gameService.addGame(newGame);\n    }\n    this.router.navigate(['/games']);\n  }\n  onCancel() {\n    this.router.navigate(['/games']);\n  }\n  getHomeTeamId() {\n    return this.game?.homeTeam?.id;\n  }\n  setHomeTeamId(id) {\n    this.game.homeTeam = this.teams.find(team => team.id === id);\n  }\n  getAwayTeamId() {\n    return this.game?.awayTeam?.id;\n  }\n  setAwayTeamId(id) {\n    this.game.awayTeam = this.teams.find(team => team.id === id);\n  }\n  createTeamMap(teams) {\n    let teamMap = {};\n    for (let team of teams) {\n      teamMap[team.id] = team;\n    }\n    return teamMap;\n  }\n  getCurrentDate() {\n    const currentDate = new Date();\n    const year = currentDate.getFullYear();\n    const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n    const day = currentDate.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n}\nGameEditComponent.ɵfac = function GameEditComponent_Factory(t) {\n  return new (t || GameEditComponent)(i0.ɵɵdirectiveInject(i1.GameService), i0.ɵɵdirectiveInject(i2.TeamService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nGameEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameEditComponent,\n  selectors: [[\"wdd430-game-edit\"]],\n  decls: 71,\n  vars: 23,\n  consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [\"id\", \"contact-edit\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"for\", \"gameDate\"], [\"type\", \"date\", \"id\", \"gameDate\", \"size\", \"120\", \"required\", \"\", \"name\", \"gameDate\", \"min\", \"1850-01-01\", 1, \"form-control\", \"required\", 3, \"ngModel\", \"max\"], [\"gameDateModel\", \"ngModel\"], [\"for\", \"time\"], [\"type\", \"text\", \"id\", \"time\", \"required\", \"\", \"name\", \"time\", \"pattern\", \"\\\\d{2}:\\\\d{2}\", 1, \"form-control\", \"required\", 3, \"ngModel\"], [\"time\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"homeTeam\"], [\"id\", \"homeTeam\", \"name\", \"homeTeam\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"homeTeamModel\", \"ngModel\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"awayTeam\"], [\"id\", \"awayTeam\", \"name\", \"awayTeam\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"awayTeamModel\", \"ngModel\"], [\"for\", \"location\"], [\"type\", \"text\", \"id\", \"location\", \"required\", \"\", \"name\", \"location\", 1, \"form-control\", \"required\", 3, \"ngModel\"], [\"location\", \"ngModel\"], [\"class\", \"alert  alert-danger\", 4, \"ngIf\"], [\"for\", \"attendance\"], [\"type\", \"number\", \"id\", \"attendance\", \"required\", \"\", \"name\", \"attendance\", \"min\", \"0\", \"max\", \"150000\", \"pattern\", \"^[0-9]{1,6}$\", 1, \"form-control\", \"required\", 3, \"ngModel\"], [\"attendance\", \"ngModel\"], [\"for\", \"finalScore\"], [\"type\", \"text\", \"id\", \"finalScore\", \"required\", \"\", \"name\", \"finalScore\", \"pattern\", \"^\\\\d{1,2}-\\\\d{1,2}$\", 1, \"form-control\", \"required\", 3, \"ngModel\"], [\"finalScore\", \"ngModel\"], [\"for\", \"recap\"], [\"id\", \"recap\", \"rows\", \"4\", \"cols\", \"50\", \"required\", \"\", \"name\", \"recap\", 1, \"form-control\", \"required\", 3, \"ngModel\", \"ngModelChange\"], [\"recap\", \"ngModel\"], [1, \"col-xs-12\", \"btn-toolbar\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"col-xs-12\"], [1, \"alert\", \"alert-danger\"], [3, \"value\", \"selected\"], [4, \"ngIf\"]],\n  template: function GameEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r29 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function GameEditComponent_Template_form_ngSubmit_2_listener() {\n        i0.ɵɵrestoreView(_r29);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 7, 8);\n      i0.ɵɵpipe(10, \"date\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"div\", 5)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Time:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 10, 11);\n      i0.ɵɵtemplate(17, GameEditComponent_div_17_Template, 3, 0, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 4)(19, \"div\", 5)(20, \"label\", 13);\n      i0.ɵɵtext(21, \"Home Team:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"select\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function GameEditComponent_Template_select_ngModelChange_22_listener($event) {\n        return ctx.homeTeam = $event;\n      });\n      i0.ɵɵtemplate(24, GameEditComponent_option_24_Template, 2, 3, \"option\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(25, GameEditComponent_div_25_Template, 3, 0, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 4)(27, \"div\", 5)(28, \"label\", 17);\n      i0.ɵɵtext(29, \"Away Team:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"select\", 18, 19);\n      i0.ɵɵlistener(\"ngModelChange\", function GameEditComponent_Template_select_ngModelChange_30_listener($event) {\n        return ctx.awayTeam = $event;\n      });\n      i0.ɵɵtemplate(32, GameEditComponent_option_32_Template, 2, 3, \"option\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(33, GameEditComponent_div_33_Template, 3, 0, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(34, \"div\", 4)(35, \"div\", 5)(36, \"label\", 20);\n      i0.ɵɵtext(37, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"input\", 21, 22);\n      i0.ɵɵtemplate(40, GameEditComponent_div_40_Template, 3, 0, \"div\", 23);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(41, \"div\", 4)(42, \"div\", 5)(43, \"label\", 24);\n      i0.ɵɵtext(44, \"Attendance:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(45, \"input\", 25, 26);\n      i0.ɵɵtemplate(47, GameEditComponent_div_47_Template, 3, 0, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(48, \"div\", 4)(49, \"div\", 5)(50, \"label\", 27);\n      i0.ɵɵtext(51, \"Final Score:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(52, \"input\", 28, 29);\n      i0.ɵɵtemplate(54, GameEditComponent_div_54_Template, 3, 0, \"div\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(55, \"div\", 4)(56, \"div\", 5)(57, \"label\", 30);\n      i0.ɵɵtext(58, \"Recap:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"textarea\", 31, 32);\n      i0.ɵɵlistener(\"ngModelChange\", function GameEditComponent_Template_textarea_ngModelChange_59_listener($event) {\n        return ctx.game.recap = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(61, GameEditComponent_div_61_Template, 3, 0, \"div\", 23);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(62, \"div\", 4)(63, \"div\", 33)(64, \"button\", 34);\n      i0.ɵɵtext(65, \"Save\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(66, \"button\", 35);\n      i0.ɵɵlistener(\"click\", function GameEditComponent_Template_button_click_66_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(67, \"Cancel\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(68, \"div\", 4)(69, \"div\", 36);\n      i0.ɵɵtemplate(70, GameEditComponent_div_70_Template, 13, 8, \"div\", 12);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(3);\n      const _r2 = i0.ɵɵreference(16);\n      const _r4 = i0.ɵɵreference(23);\n      const _r7 = i0.ɵɵreference(31);\n      const _r10 = i0.ɵɵreference(39);\n      const _r12 = i0.ɵɵreference(46);\n      const _r14 = i0.ɵɵreference(53);\n      const _r16 = i0.ɵɵreference(60);\n      i0.ɵɵadvance(8);\n      i0.ɵɵpropertyInterpolate(\"max\", ctx.getCurrentDate());\n      i0.ɵɵproperty(\"ngModel\", i0.ɵɵpipeBind2(10, 20, ctx.game == null ? null : ctx.game.gameDate, \"yyyy-MM-dd\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.game == null ? null : ctx.game.time);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r2.invalid && _r2.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.homeTeam);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.teams);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r4.invalid && (_r4.touched || _r4.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.awayTeam);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.teams);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r7.invalid && (_r7.touched || _r7.dirty));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.game == null ? null : ctx.game.location);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !_r10.valid && _r10.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.game == null ? null : ctx.game.attendance);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r12.invalid && _r12.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.game == null ? null : ctx.game.finalScore);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r14.invalid && _r14.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.game.recap);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !_r16.valid && _r16.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", !_r0.valid && _r0.touched);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.PatternValidator, i5.MinValidator, i5.MaxValidator, i5.NgModel, i5.NgForm, i4.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Game","i0","GameEditComponent","constructor","gameService","teamService","route","router","teamListChangedEvent","subscribe","teams","teamMap","createTeamMap","console","log","ngOnInit","initializeGame","getTeams","params","id","undefined","editMode","gameListChangedEvent","games","originalGame","getGame","game","JSON","parse","stringify","getGames","length","homeTeam","find","team","awayTeam","recap","gameDate","time","location","attendance","finalScore","onSubmit","form","values","value","homeTeamId","awayTeamId","newGame","updateGame","addGame","navigate","onCancel","getHomeTeamId","setHomeTeamId","getAwayTeamId","setAwayTeamId","getCurrentDate","currentDate","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\laragon\\www\\wdd-430\\src\\app\\games\\game-edit\\game-edit.component.ts","C:\\laragon\\www\\wdd-430\\src\\app\\games\\game-edit\\game-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Game } from '../game.model';\nimport { GameService } from '../game.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Team } from '../../teams/team.model';\nimport { TeamService } from '../../teams/team.service';\n\n@Component({\n  selector: 'wdd430-game-edit',\n  templateUrl: './game-edit.component.html',\n  styleUrls: ['./game-edit.component.css'],\n})\nexport class GameEditComponent implements OnInit {\n  originalGame: Game;\n  game: Game = null;\n  editMode: boolean = false;\n  teams: Team[]; // Variable to store the teams\n\n  teamMap: { [id: number]: Team }; // Map to store teams by ID\n\n  homeTeam: number; // Update the type to number\n  awayTeam: number; // Update the type to number\n\n  constructor(\n    private gameService: GameService,\n    private teamService: TeamService, // Inject the Team service\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    // Subscribe to the teamsListChangedEvent\n    this.teamService.teamListChangedEvent.subscribe((teams: Team[]) => {\n      this.teams = teams;\n      this.teamMap = this.createTeamMap(teams);\n      console.log(this.teamMap);\n    });\n  }\n\n  ngOnInit() {\n    this.teamService.teamListChangedEvent.subscribe((teams: Team[]) => {\n      this.teams = teams;\n      this.initializeGame();\n    });\n\n    this.teamService.getTeams(); // Move getTeams() call here\n\n    this.route.params.subscribe((params) => {\n      let id = params['id'];\n      if (id === undefined || id === null) {\n        this.editMode = false;\n        return; // Remove the teamService.getTeams() call from here\n      }\n\n      this.gameService.gameListChangedEvent.subscribe((games: Game[]) => {\n        this.originalGame = this.gameService.getGame(id);\n        if (this.originalGame === undefined || this.originalGame === null) {\n          return;\n        }\n        this.editMode = true;\n        this.game = JSON.parse(JSON.stringify(this.originalGame));\n        this.initializeGame(); // Call initializeGame() after assigning this.game\n      });\n\n      this.gameService.getGames();\n    });\n  }\n\n  initializeGame() {\n    if (this.teams.length > 0 && this.game) {\n      this.game.homeTeam = this.teams.find(\n        (team) => team.id === this.game.homeTeam?.id\n      );\n      this.game.awayTeam = this.teams.find(\n        (team) => team.id === this.game.awayTeam?.id\n      );\n      this.game.recap = this.game.recap || ''; // Initialize recap with an empty string if it is null\n    } else {\n      this.game = {\n        id: null,\n        gameDate: null,\n        time: null,\n        homeTeam: null,\n        awayTeam: null,\n        location: null,\n        attendance: null,\n        finalScore: null,\n        recap: '',\n      };\n    }\n  }\n\n  onSubmit(form: NgForm) {\n    let values = form.value;\n    // Extract the id values from game.homeTeam and game.awayTeam objects\n    let homeTeamId = values.homeTeam;\n    let awayTeamId = values.awayTeam;\n    // Retrieve the corresponding team objects based on the IDs\n    let homeTeam = this.teamMap[homeTeamId];   \n    let awayTeam = this.teamMap[awayTeamId];  \n    let newGame = new Game(\n      null,\n      values.gameDate,\n      values.time,\n      homeTeam,\n      awayTeam,\n      values.location,\n      values.attendance,\n      values.finalScore,\n      values.recap\n    );\n  \n    if (this.editMode === true) {\n      this.gameService.updateGame(this.originalGame, newGame);\n    } else {\n      this.gameService.addGame(newGame);\n    }\n  \n    this.router.navigate(['/games']);\n  }\n  \n\n  onCancel() {\n    this.router.navigate(['/games']);\n  }\n\n  getHomeTeamId() {\n    return this.game?.homeTeam?.id;\n  }\n\n  setHomeTeamId(id: number) {\n    this.game.homeTeam = this.teams.find((team) => team.id === id);\n  }\n\n  getAwayTeamId() {\n    return this.game?.awayTeam?.id;\n  }\n\n  setAwayTeamId(id: number) {\n    this.game.awayTeam = this.teams.find((team) => team.id === id);\n  }\n\n  createTeamMap(teams: Team[]): { [id: number]: Team } {\n    let teamMap: { [id: number]: Team } = {};\n    for (let team of teams) {\n      teamMap[team.id] = team;\n    }\n    return teamMap;\n  }\n\n  getCurrentDate(): string {\n    const currentDate = new Date();\n    const year = currentDate.getFullYear();\n    const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n    const day = currentDate.getDate().toString().padStart(2, '0');\n    return `${year}-${month}-${day}`;\n  }\n  \n}\n","<div class=\"panel panel-default\">\n  <div class=\"panel-body\">\n    <form id=\"contact-edit\" (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\">\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"gameDate\">Date:</label>\n          <input type=\"date\" id=\"gameDate\" class=\"form-control required\" size=\"120\" required name=\"gameDate\"\n  #gameDateModel=\"ngModel\" [ngModel]=\"game?.gameDate | date:'yyyy-MM-dd'\"\n  min=\"1850-01-01\" max=\"{{ getCurrentDate() }}\">\n\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"time\">Time:</label>\n          <input type=\"text\" id=\"time\" class=\"form-control required\"   required name=\"time\"\n            #time=\"ngModel\" [ngModel]=\"game?.time\" pattern=\"\\d{2}:\\d{2}\">\n          <!-- add a span to display a message to the user when the time field does not have the correct pattern -->\n          <div *ngIf=\"time.invalid && time.touched\" class=\"alert alert-danger\">\n            <span>Please enter a valid time in the format HH:MM (e.g., 10:00)</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"homeTeam\">Home Team:</label>\n          <select id=\"homeTeam\" class=\"form-control\" name=\"homeTeam\" [(ngModel)]=\"homeTeam\" required #homeTeamModel=\"ngModel\">\n            <option *ngFor=\"let team of teams\" [value]=\"team.id\" [selected]=\"team.id == game?.homeTeam?.id\">{{ team.teamName }}</option>\n          </select>\n          <div *ngIf=\"homeTeamModel.invalid && (homeTeamModel.touched || homeTeamModel.dirty)\" class=\"alert alert-danger\">\n            <span>Please enter a valid homeTeam</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"awayTeam\">Away Team:</label>\n          <select id=\"awayTeam\" class=\"form-control\" name=\"awayTeam\" [(ngModel)]=\"awayTeam\" required #awayTeamModel=\"ngModel\">\n            <option *ngFor=\"let team of teams\" [value]=\"team.id\" [selected]=\"team.id == game?.awayTeam?.id\">{{ team.teamName }}</option>\n          </select>\n          <div *ngIf=\"awayTeamModel.invalid && (awayTeamModel.touched || awayTeamModel.dirty)\" class=\"alert alert-danger\">\n            <span>Please enter a valid awayTeam</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"location\">Location:</label>\n          <input type=\"text\" id=\"location\" class=\"form-control required\"   required name=\"location\"\n            #location=\"ngModel\" [ngModel]=\"game?.location\">\n          <!-- add a span to display a message to the user when the location field have not the correct patter -->\n          <div *ngIf=\"!location.valid && location.touched\" class=\"alert  alert-danger\">\n            <span>Please enter a valid location</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"attendance\">Attendance:</label>\n          <input type=\"number\" id=\"attendance\" class=\"form-control required\" required name=\"attendance\"\n            #attendance=\"ngModel\" [ngModel]=\"game?.attendance\" min=\"0\" max=\"150000\" pattern=\"^[0-9]{1,6}$\">\n          <!-- add a span to display a message to the user when the attendance field is invalid -->\n          <div *ngIf=\"attendance.invalid && attendance.touched\" class=\"alert alert-danger\">\n            <span>Please enter a valid attendance between 0 and 150,000</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"finalScore\">Final Score:</label>\n          <input type=\"text\" id=\"finalScore\" class=\"form-control required\"   required\n            name=\"finalScore\" #finalScore=\"ngModel\" [ngModel]=\"game?.finalScore\" pattern=\"^\\d{1,2}-\\d{1,2}$\">\n          <!-- add a span to display a message to the user when the finalScore field does not have the correct pattern -->\n          <div *ngIf=\"finalScore.invalid && finalScore.touched\" class=\"alert alert-danger\">\n            <span>Please enter a valid final score in the format '10-1'</span>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-sm-12 form-group\">\n          <label for=\"recap\">Recap:</label>\n          <textarea id=\"recap\" class=\"form-control required\" rows=\"4\" cols=\"50\" required name=\"recap\" #recap=\"ngModel\"\n            [(ngModel)]=\"game.recap\"></textarea>\n          <!-- add a span to display a message to the user when the email field does not have the correct pattern -->\n          <div *ngIf=\"!recap.valid && recap.touched\" class=\"alert  alert-danger\">\n            <span>Please enter a valid recap</span>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"row\">\n        <div class=\"col-xs-12 btn-toolbar\">\n          <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"!f.valid\">Save</button>\n          <button class=\"btn btn-primary\" type=\"button\" (click)=\"onCancel()\">Cancel</button>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xs-12\">\n          <div class=\"alert alert-danger\" *ngIf=\"!f.valid && f.touched\">\n            <div>\n              <p>Please fix the following errors:</p>\n              <ul>\n                <li *ngIf=\"!gameDateModel.valid\">Date is required.</li>\n                <li *ngIf=\"!time.valid\">Time is required.</li>\n                <li *ngIf=\"!homeTeamModel.valid\">Home Team is required.</li>\n                <li *ngIf=\"!awayTeamModel.valid\">Away Team is required.</li>\n                <li *ngIf=\"!location.valid\">Location is required.</li>\n                <li *ngIf=\"!attendance.valid\">Attendance is required.</li>\n                <li *ngIf=\"!finalScore.valid\">Final Score is required.</li>\n                <li *ngIf=\"!recap.valid\">Recap is required.</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </form>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}