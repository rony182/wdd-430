{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { MOCKMESSAGES } from './MOCKMESSAGES';\nimport * as i0 from \"@angular/core\";\nexport class MessageService {\n  constructor() {\n    this.messageChangeEvent = new EventEmitter();\n    this.messages = [];\n    this.messages = MOCKMESSAGES;\n  }\n  getMessages() {\n    return this.messages.slice();\n  }\n  getMessage(id) {\n    for (let message of this.messages) {\n      if (message.id === id) {\n        return message;\n      }\n    }\n    return null;\n  }\n  addMessage(message) {\n    this.messages.push(message);\n    this.messageChangeEvent.emit(this.messages.slice());\n  }\n}\nMessageService.ɵfac = function MessageService_Factory(t) {\n  return new (t || MessageService)();\n};\nMessageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MessageService,\n  factory: MessageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,YAAY,QAAQ,eAAe;AAExD,SAASC,YAAY,QAAQ,gBAAgB;;AAK7C,OAAM,MAAOC,cAAc;EAMzBC;IALA,uBAAkB,GAAG,IAAIH,YAAY,EAAa;IAElD,aAAQ,GAAc,EAAE;IAItB,IAAI,CAACI,QAAQ,GAAGH,YAAY;EAC9B;EACAI,WAAW;IACT,OAAO,IAAI,CAACD,QAAQ,CAACE,KAAK,EAAE;EAC9B;EACAC,UAAU,CAACC,EAAU;IACnB,KAAK,IAAIC,OAAO,IAAI,IAAI,CAACL,QAAQ,EAAE;MACjC,IAAIK,OAAO,CAACD,EAAE,KAAKA,EAAE,EAAE;QACrB,OAAOC,OAAO;;;IAGlB,OAAO,IAAI;EACb;EACAC,UAAU,CAACD,OAAgB;IACzB,IAAI,CAACL,QAAQ,CAACO,IAAI,CAACF,OAAO,CAAC;IAC3B,IAAI,CAACG,kBAAkB,CAACC,IAAI,CAAC,IAAI,CAACT,QAAQ,CAACE,KAAK,EAAE,CAAC;EACrD;;AAvBWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAY,SAAdZ,cAAc;EAAAa,YAFb;AAAM","names":["EventEmitter","MOCKMESSAGES","MessageService","constructor","messages","getMessages","slice","getMessage","id","message","addMessage","push","messageChangeEvent","emit","factory","providedIn"],"sourceRoot":"","sources":["C:\\laragon\\www\\cms_app\\src\\app\\messages\\message.service.ts"],"sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { Message } from './message.model';\nimport { MOCKMESSAGES } from './MOCKMESSAGES';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messageChangeEvent = new EventEmitter<Message[]>();\n\n  messages: Message[] = [];\n  \n\n  constructor() {\n    this.messages = MOCKMESSAGES;\n  }\n  getMessages(): Message[] {\n    return this.messages.slice();\n  }\n  getMessage(id: number): Message {\n    for (let message of this.messages) {\n      if (message.id === id) {\n        return message;\n      }\n    }\n    return null;\n  }\n  addMessage(message: Message) {\n    this.messages.push(message);\n    this.messageChangeEvent.emit(this.messages.slice());\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}