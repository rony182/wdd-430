{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Player } from '../player.model';\nlet PlayerEditComponent = class PlayerEditComponent {\n  constructor(playerService, route, router, teamService // Inject the Team service\n  ) {\n    this.playerService = playerService;\n    this.route = route;\n    this.router = router;\n    this.teamService = teamService;\n    this.player = null;\n    this.editMode = false;\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      let id = params['id'];\n      if (id === undefined || id === null) {\n        this.editMode = false;\n        return;\n      }\n      this.playerService.playerListChangedEvent.subscribe(players => {\n        this.originalPlayer = this.playerService.getPlayer(id);\n        if (this.originalPlayer === undefined || this.originalPlayer === null) {\n          return;\n        }\n        this.editMode = true;\n        this.player = JSON.parse(JSON.stringify(this.originalPlayer));\n      });\n      this.playerService.getPlayers();\n    });\n  }\n  onSubmit(form) {\n    let values = form.value;\n    let newPlayer = new Player(null, values.playerName, values.position, values.height, values.weight, values.birthDate, values.nationality, values.experienceYears, values.club);\n    if (this.editMode) {\n      this.playerService.updatePlayer(this.originalPlayer, newPlayer);\n    } else {\n      this.playerService.addPlayer(newPlayer);\n    }\n    this.router.navigate(['/players']);\n  }\n  onCancel() {\n    this.router.navigate(['/players']);\n  }\n};\nPlayerEditComponent = __decorate([Component({\n  selector: 'wdd430-player-edit',\n  templateUrl: './player-edit.component.html',\n  styleUrls: ['./player-edit.component.css']\n})], PlayerEditComponent);\nexport { PlayerEditComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,MAAM,QAAQ,iBAAiB;AAWjC,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAO5BC,YACUC,aAA4B,EAC5BC,KAAqB,EACrBC,MAAc,EACdC,WAAwB,CAAC;EAAA;IAHzB,kBAAa,GAAbH,aAAa;IACb,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IACN,gBAAW,GAAXC,WAAW;IATvB,WAAM,GAAW,IAAI;IACrB,aAAQ,GAAY,KAAK;EASnB;EAEJC,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,SAAS,CAAED,MAAM,IAAI;MACrC,IAAIE,EAAE,GAAGF,MAAM,CAAC,IAAI,CAAC;MACrB,IAAIE,EAAE,KAAKC,SAAS,IAAID,EAAE,KAAK,IAAI,EAAE;QACnC,IAAI,CAACE,QAAQ,GAAG,KAAK;QACrB;;MAGF,IAAI,CAACT,aAAa,CAACU,sBAAsB,CAACJ,SAAS,CAAEK,OAAiB,IAAI;QACxE,IAAI,CAACC,cAAc,GAAG,IAAI,CAACZ,aAAa,CAACa,SAAS,CAACN,EAAE,CAAC;QACtD,IAAI,IAAI,CAACK,cAAc,KAAKJ,SAAS,IAAI,IAAI,CAACI,cAAc,KAAK,IAAI,EAAE;UACrE;;QAEF,IAAI,CAACH,QAAQ,GAAG,IAAI;QACpB,IAAI,CAACK,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAAC,IAAI,CAACL,cAAc,CAAC,CAAC;MAC/D,CAAC,CAAC;MACF,IAAI,CAACZ,aAAa,CAACkB,UAAU,EAAE;IACjC,CAAC,CAAC;EACJ;EAEAC,QAAQ,CAACC,IAAY;IACnB,IAAIC,MAAM,GAAGD,IAAI,CAACE,KAAK;IACvB,IAAIC,SAAS,GAAG,IAAI1B,MAAM,CACxB,IAAI,EACJwB,MAAM,CAACG,UAAU,EACjBH,MAAM,CAACI,QAAQ,EACfJ,MAAM,CAACK,MAAM,EACbL,MAAM,CAACM,MAAM,EACbN,MAAM,CAACO,SAAS,EAChBP,MAAM,CAACQ,WAAW,EAClBR,MAAM,CAACS,eAAe,EACtBT,MAAM,CAACU,IAAI,CACZ;IACD,IAAI,IAAI,CAACtB,QAAQ,EAAE;MACjB,IAAI,CAACT,aAAa,CAACgC,YAAY,CAAC,IAAI,CAACpB,cAAc,EAAEW,SAAS,CAAC;KAChE,MAAM;MACL,IAAI,CAACvB,aAAa,CAACiC,SAAS,CAACV,SAAS,CAAC;;IAEzC,IAAI,CAACrB,MAAM,CAACgC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;EAEAC,QAAQ;IACN,IAAI,CAACjC,MAAM,CAACgC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;EACpC;CAEH;AA3DYpC,mBAAmB,eAL/BF,SAAS,CAAC;EACTwC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,8BAA8B;EAC3CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACWxC,mBAAmB,CA2D/B;SA3DYA,mBAAmB","names":["Component","Player","PlayerEditComponent","constructor","playerService","route","router","teamService","ngOnInit","params","subscribe","id","undefined","editMode","playerListChangedEvent","players","originalPlayer","getPlayer","player","JSON","parse","stringify","getPlayers","onSubmit","form","values","value","newPlayer","playerName","position","height","weight","birthDate","nationality","experienceYears","club","updatePlayer","addPlayer","navigate","onCancel","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\laragon\\www\\wdd-430\\src\\app\\players\\player-edit\\player-edit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Player } from '../player.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PlayerService } from '../player.service';\nimport { NgForm } from '@angular/forms';\nimport { Team } from '../../teams/team.model';\n\n@Component({\n  selector: 'wdd430-player-edit',\n  templateUrl: './player-edit.component.html',\n  styleUrls: ['./player-edit.component.css']\n})\nexport class PlayerEditComponent implements OnInit {\n  originalPlayer: Player;\n  player: Player = null;\n  editMode: boolean = false;\n  players: Player[]; // Variable to store the players\n  teams: Team[]; // Variable to store the teams\n\n    constructor(\n      private playerService: PlayerService,\n      private route: ActivatedRoute,\n      private router: Router\n      private teamService: TeamService // Inject the Team service\n    ) { }\n  \n    ngOnInit() {\n      this.route.params.subscribe((params) => {\n        let id = params['id'];\n        if (id === undefined || id === null) {\n          this.editMode = false;\n          return;\n        }\n    \n        this.playerService.playerListChangedEvent.subscribe((players: Player[]) => {\n          this.originalPlayer = this.playerService.getPlayer(id);\n          if (this.originalPlayer === undefined || this.originalPlayer === null) {\n            return;\n          }\n          this.editMode = true;\n          this.player = JSON.parse(JSON.stringify(this.originalPlayer));\n        });\n        this.playerService.getPlayers();\n      });\n    }\n\n    onSubmit(form: NgForm) {\n      let values = form.value;\n      let newPlayer = new Player(\n        null,\n        values.playerName,\n        values.position,\n        values.height,\n        values.weight,\n        values.birthDate,\n        values.nationality,\n        values.experienceYears,\n        values.club\n      );\n      if (this.editMode) {\n        this.playerService.updatePlayer(this.originalPlayer, newPlayer);\n      } else {\n        this.playerService.addPlayer(newPlayer);\n      }\n      this.router.navigate(['/players']);\n    }\n\n    onCancel() {\n      this.router.navigate(['/players']);\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}