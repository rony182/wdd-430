{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DocumentService = /*#__PURE__*/(() => {\n  class DocumentService {\n    constructor(http) {\n      this.http = http;\n      this.documentListChangedEvent = new Subject();\n      this.documentSelectedEvent = new EventEmitter();\n      this.documentChangedEvent = new EventEmitter();\n      this.documents = [];\n      this.http.get('https://cms-project-1ccee-default-rtdb.firebaseio.com/documents.json').subscribe(documents => {\n        this.documents = documents;\n        this.maxDocumentId = this.getMaxId();\n        this.documents.sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0);\n        this.documentListChangedEvent.next(this.documents.slice());\n      }, error => {\n        console.log(error);\n      });\n    }\n    getDocuments() {\n      return this.documents.slice();\n    }\n    getDocument(id) {\n      return this.documents.find(document => document.id === id) || null;\n    }\n    deleteDocument(document) {\n      if (!document) {\n        return;\n      }\n      const pos = this.documents.indexOf(document);\n      if (pos < 0) {\n        return;\n      }\n      this.documents.splice(pos, 1);\n      this.storeDocuments();\n    }\n    getMaxId() {\n      let maxId = 0;\n      for (let document of this.documents) {\n        let currentId = parseInt(document.id);\n        if (currentId > maxId) {\n          maxId = currentId;\n        }\n      }\n      return maxId.toString();\n    }\n    addDocument(newDocument) {\n      if (!newDocument) {\n        return;\n      }\n      let currentmaxId = parseInt(this.maxDocumentId);\n      currentmaxId++;\n      newDocument.id = currentmaxId.toString();\n      this.documents.push(newDocument);\n      this.storeDocuments();\n    }\n    updateDocument(originalDocument, newDocument) {\n      if (!originalDocument || !newDocument) {\n        return;\n      }\n      const pos = this.documents.indexOf(originalDocument);\n      if (pos < 0) {\n        return;\n      }\n      newDocument.id = originalDocument.id;\n      this.documents[pos] = newDocument;\n      this.storeDocuments();\n    }\n    storeDocuments() {\n      let documents = JSON.stringify(this.documents);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      this.http.put('https://cms-project-1ccee-default-rtdb.firebaseio.com/documents.json', documents, {\n        headers: headers\n      }).subscribe(() => {\n        this.documentListChangedEvent.next(this.documents.slice());\n      });\n    }\n  }\n  DocumentService.ɵfac = function DocumentService_Factory(t) {\n    return new (t || DocumentService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  DocumentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DocumentService,\n    factory: DocumentService.ɵfac,\n    providedIn: 'root'\n  });\n  return DocumentService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}