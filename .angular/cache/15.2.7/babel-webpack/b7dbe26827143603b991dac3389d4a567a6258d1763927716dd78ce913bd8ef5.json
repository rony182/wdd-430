{"ast":null,"code":"import { Contact } from '../contact.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"ng2-dnd\";\nimport * as i6 from \"../contact-item/contact-item.component\";\nfunction ContactEditComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"span\");\n    i0.ɵɵtext(2, \"Please enter a valid email\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ContactEditComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"span\");\n    i0.ɵɵtext(2, \"Please enter a valid phone\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ContactEditComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵelement(2, \"cms-contact-item\", 30);\n    i0.ɵɵelementStart(3, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ContactEditComponent_div_35_Template_button_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const i_r11 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.onRemoveItem(i_r11));\n    });\n    i0.ɵɵtext(4, \"X\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const contact_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"contact\", contact_r10);\n  }\n}\nfunction ContactEditComponent_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 32);\n    i0.ɵɵtext(1, \"Drag contacts in group here\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactEditComponent_div_45_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactEditComponent_div_45_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactEditComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29)(1, \"div\")(2, \"p\");\n    i0.ɵɵtext(3, \"Please fix the following errors:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\");\n    i0.ɵɵtemplate(5, ContactEditComponent_div_45_li_5_Template, 2, 0, \"li\", 33);\n    i0.ɵɵtemplate(6, ContactEditComponent_div_45_li_6_Template, 2, 0, \"li\", 33);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(9);\n    const _r2 = i0.ɵɵreference(15);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !_r1.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !_r2.valid);\n  }\n}\nconst _c0 = function () {\n  return [\"contactGroup\"];\n};\nexport let ContactEditComponent = /*#__PURE__*/(() => {\n  class ContactEditComponent {\n    constructor(contactService, router, route) {\n      this.contactService = contactService;\n      this.router = router;\n      this.route = route;\n      this.groupContacts = [];\n      this.contact = null;\n      this.editMode = false;\n    }\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        let id = params['id'];\n        if (id === undefined || id === null) {\n          this.editMode = false;\n          return;\n        }\n        this.originalContact = this.contactService.getContact(id);\n        if (this.originalContact === undefined || this.originalContact === null) {\n          return;\n        }\n        this.contact = JSON.parse(JSON.stringify(this.originalContact));\n        this.editMode = true;\n        if (this.originalContact.group != null) {\n          this.groupContacts = JSON.parse(JSON.stringify(this.originalContact.group));\n        }\n      });\n    }\n    onSubmit(form) {\n      let values = form.value;\n      let newContact = new Contact(this.contactService.getMaxId(), values.name, values.email, values.phone, values.imageUrl, this.groupContacts);\n      if (this.editMode === true) {\n        this.contactService.updateContact(this.originalContact, newContact);\n      } else {\n        this.contactService.addContact(newContact);\n      }\n      this.router.navigate(['/contacts']);\n    }\n    onCancel() {\n      this.router.navigate(['/contacts']);\n    }\n    isInvalidContact(newContact) {\n      if (!newContact) {\n        return true;\n      }\n      if (newContact.id === this.contact.id) {\n        return true;\n      }\n      for (let i = 0; i < this.groupContacts.length; i++) {\n        if (newContact.id === this.groupContacts[i].id) {\n          return true;\n        }\n      }\n      return false;\n    }\n    addToGroup($event) {\n      let selectedContact = $event.dragData;\n      let invalidGroupContact = this.groupContacts.indexOf(selectedContact) !== -1;\n      if (invalidGroupContact) {\n        return;\n      }\n      this.groupContacts.push(selectedContact);\n    }\n    onRemoveItem(idx) {\n      if (idx < 0 || idx >= this.groupContacts.length) {\n        return;\n      }\n      this.groupContacts.splice(idx, 1);\n    }\n  }\n  ContactEditComponent.ɵfac = function ContactEditComponent_Factory(t) {\n    return new (t || ContactEditComponent)(i0.ɵɵdirectiveInject(i1.ContactService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n  ContactEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactEditComponent,\n    selectors: [[\"cms-contact-edit\"]],\n    decls: 46,\n    vars: 12,\n    consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [\"id\", \"contact-edit\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"size\", \"120\", \"max\", \"120\", \"required\", \"\", \"name\", \"name\", 1, \"form-control\", \"required\", 3, \"ngModel\"], [\"name\", \"ngModel\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"size\", \"120\", \"max\", \"255\", \"required\", \"\", \"name\", \"email\", \"pattern\", \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\", 1, \"form-control\", \"required\", 3, \"ngModel\"], [\"email\", \"ngModel\"], [\"class\", \"alert  alert-danger\", 4, \"ngIf\"], [\"for\", \"phone\"], [\"type\", \"text\", \"id\", \"phone\", \"size\", \"150\", \"max\", \"255\", \"name\", \"phone\", \"pattern\", \"\\\\D*([2-9]\\\\d{2})(\\\\D*)([2-9]\\\\d{2})(\\\\D*)(\\\\d{4})\\\\D*\", 1, \"form-control\", \"invalid\", 3, \"ngModel\"], [\"phone\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"for\", \"imageUrl\"], [\"type\", \"text\", \"id\", \"imageUrl\", \"size\", \"150\", \"max\", \"255\", \"name\", \"imageUrl\", 1, \"form-control\", 3, \"ngModel\"], [\"imageUrl\", \"ngModel\"], [1, \"form-group\"], [\"for\", \"groupList\"], [\"id\", \"groupList\", \"dnd-droppable\", \"\", 1, \"row\", 2, \"min-height\", \"3rem\", 3, \"dropZones\", \"onDropSuccess\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"dragMsg\", 4, \"ngIf\"], [1, \"col-xs-12\", \"btn-toolbar\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"col-xs-12\"], [1, \"alert\", \"alert-danger\"], [1, \"col-sm-11\", 3, \"contact\"], [1, \"btn\", \"btn-danger\", \"col-sm-2\", \"deleteButton\", 3, \"click\"], [1, \"dragMsg\"], [4, \"ngIf\"]],\n    template: function ContactEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r16 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function ContactEditComponent_Template_form_ngSubmit_2_listener() {\n          i0.ɵɵrestoreView(_r16);\n          const _r0 = i0.ɵɵreference(3);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"label\", 6);\n        i0.ɵɵtext(7, \"Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 7, 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"div\", 5)(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 10, 11);\n        i0.ɵɵtemplate(16, ContactEditComponent_div_16_Template, 3, 0, \"div\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 4)(18, \"div\", 5)(19, \"label\", 13);\n        i0.ɵɵtext(20, \"Phone:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 14, 15);\n        i0.ɵɵtemplate(23, ContactEditComponent_div_23_Template, 3, 0, \"div\", 16);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 4)(25, \"div\", 5)(26, \"label\", 17);\n        i0.ɵɵtext(27, \"Image URL:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 18, 19);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 4)(31, \"div\", 20)(32, \"label\", 21);\n        i0.ɵɵtext(33, \"Group Contacts:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 22);\n        i0.ɵɵlistener(\"onDropSuccess\", function ContactEditComponent_Template_div_onDropSuccess_34_listener($event) {\n          return ctx.addToGroup($event);\n        });\n        i0.ɵɵtemplate(35, ContactEditComponent_div_35_Template, 5, 1, \"div\", 23);\n        i0.ɵɵtemplate(36, ContactEditComponent_span_36_Template, 2, 0, \"span\", 24);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(37, \"div\", 4)(38, \"div\", 25)(39, \"button\", 26);\n        i0.ɵɵtext(40, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"button\", 27);\n        i0.ɵɵlistener(\"click\", function ContactEditComponent_Template_button_click_41_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(42, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(43, \"div\", 4)(44, \"div\", 28);\n        i0.ɵɵtemplate(45, ContactEditComponent_div_45_Template, 7, 2, \"div\", 16);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(3);\n        const _r2 = i0.ɵɵreference(15);\n        const _r4 = i0.ɵɵreference(22);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.contact == null ? null : ctx.contact.name);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.contact == null ? null : ctx.contact.email);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !_r2.valid && _r2.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.contact == null ? null : ctx.contact.phone);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !_r4.valid && _r4.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.contact == null ? null : ctx.contact.imageUrl);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"dropZones\", i0.ɵɵpureFunction0(11, _c0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.groupContacts);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.groupContacts == null ? null : ctx.groupContacts.length) < 1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", !_r0.valid && _r0.touched);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.PatternValidator, i4.NgModel, i4.NgForm, i5.DroppableComponent, i6.ContactItemComponent],\n    styles: [\"input.required.ng-invalid.ng-touched[_ngcontent-%COMP%], .invalid.ng-invalid.ng-dirty[_ngcontent-%COMP%]{border:1px solid red}.pad-left-right[_ngcontent-%COMP%]{padding-left:.1rem}.deleteButton[_ngcontent-%COMP%]{margin-top:1.5rem;margin-left:-1.2rem;width:3.4rem}.buttonDiv[_ngcontent-%COMP%]{margin-top:1.5rem}.groupDiv[_ngcontent-%COMP%]{min-height:6rem;border:solid thin lightgrey}.dragMsg[_ngcontent-%COMP%]{font-size:2rem;color:#a9a9a9;margin-left:3rem}\"]\n  });\n  return ContactEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}