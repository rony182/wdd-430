{"ast":null,"code":"import { Message } from '../message.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../message.service\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"subject\"];\nconst _c1 = [\"msgText\"];\nexport let MessageEditComponent = /*#__PURE__*/(() => {\n  class MessageEditComponent {\n    constructor(messageService) {\n      this.messageService = messageService;\n      this.currentSender = 1;\n    }\n    ngOnInit() {}\n    onSendMessage() {\n      const subjectValue = this.subjectRef.nativeElement.value;\n      const msgTextValue = this.msgTextRef.nativeElement.value;\n      const id = this.messageService.getMaxId();\n      console.log(id);\n      const newMessage = new Message(id, subjectValue, msgTextValue, this.currentSender);\n      this.messageService.addMessage(newMessage);\n    }\n    onClear() {\n      //assign blank values to the subject and msgText\n      this.subjectRef.nativeElement.value = '';\n      this.msgTextRef.nativeElement.value = '';\n    }\n  }\n  MessageEditComponent.ɵfac = function MessageEditComponent_Factory(t) {\n    return new (t || MessageEditComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n  };\n  MessageEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MessageEditComponent,\n    selectors: [[\"cms-message-edit\"]],\n    viewQuery: function MessageEditComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.subjectRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.msgTextRef = _t.first);\n      }\n    },\n    decls: 20,\n    vars: 0,\n    consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-body\"], [\"id\", \"document-edit\"], [1, \"row\"], [1, \"col-sm-12\", \"form-group\"], [\"for\", \"subject\"], [\"type\", \"text\", \"id\", \"subject\", \"size\", \"120\", \"max\", \"120\", 1, \"form-control\"], [\"subject\", \"\"], [\"for\", \"message\"], [\"type\", \"text\", \"id\", \"message\", \"max\", \"255\", \"size\", \"120\", 1, \"form-control\"], [\"msgText\", \"\"], [1, \"col-xs-12\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n    template: function MessageEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Subject\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 6, 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 8);\n        i0.ɵɵtext(11, \"Message\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9, 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 3)(15, \"div\", 11)(16, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function MessageEditComponent_Template_button_click_16_listener() {\n          return ctx.onSendMessage();\n        });\n        i0.ɵɵtext(17, \"Send\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function MessageEditComponent_Template_button_click_18_listener() {\n          return ctx.onClear();\n        });\n        i0.ɵɵtext(19, \"Clear\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.NgForm]\n  });\n  return MessageEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}