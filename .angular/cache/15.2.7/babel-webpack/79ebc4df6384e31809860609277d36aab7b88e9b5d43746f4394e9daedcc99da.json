{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../contact.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ng2-dnd\";\nimport * as i5 from \"../contact-item/contact-item.component\";\nimport * as i6 from \"../contacts-filter.pipe\";\nconst _c0 = function () {\n  return [\"contactGroup\"];\n};\nfunction ContactListComponent_cms_contact_item_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"cms-contact-item\", 13);\n  }\n  if (rf & 2) {\n    const contactEl_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"contact\", contactEl_r2)(\"dragEnabled\", true)(\"dragData\", contactEl_r2)(\"dropZones\", i0.ɵɵpureFunction0(4, _c0));\n  }\n}\nconst _c1 = function () {\n  return [\"new\"];\n};\nexport class ContactListComponent {\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.contacts = [];\n  }\n  ngOnInit() {\n    this.contacts = this.contactService.getContacts();\n    this.contactService.contactChangedEvent.subscribe(contacts => {\n      this.contacts = contacts;\n    });\n    this.subscription = this.contactService.contactListChangedEvent.subscribe(contactsList => {\n      this.contacts = contactsList;\n    });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  search(value) {\n    this.term = value;\n  }\n}\nContactListComponent.ɵfac = function ContactListComponent_Factory(t) {\n  return new (t || ContactListComponent)(i0.ɵɵdirectiveInject(i1.ContactService));\n};\nContactListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactListComponent,\n  selectors: [[\"cms-contact-list\"]],\n  decls: 17,\n  vars: 6,\n  consts: [[1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"row\"], [1, \"title\", \"pad-left-right\"], [1, \"input-group\", \"pull-left\", \"pad-left-right\", \"col-xs-7\"], [\"placeholder\", \"Enter a search value\", \"type\", \"text\", 1, \"form-control\", 3, \"keyup\"], [\"searchBox\", \"\"], [1, \"glyphicon\", \"glyphicon-search\", \"input-group-addon\", 3, \"click\"], [1, \"pull-right\", \"pad-left-right\"], [1, \"btn\", \"btn-success\", 3, \"routerLink\"], [1, \"panel-body\"], [1, \"col-xs-12\"], [\"dnd-draggable\", \"\", 3, \"contact\", \"dragEnabled\", \"dragData\", \"dropZones\", 4, \"ngFor\", \"ngForOf\"], [\"dnd-draggable\", \"\", 3, \"contact\", \"dragEnabled\", \"dragData\", \"dropZones\"]],\n  template: function ContactListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\", 3);\n      i0.ɵɵtext(4, \"Contacts\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 4)(7, \"input\", 5, 6);\n      i0.ɵɵlistener(\"keyup\", function ContactListComponent_Template_input_keyup_7_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7);\n      i0.ɵɵlistener(\"click\", function ContactListComponent_Template_div_click_9_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 8)(11, \"a\", 9);\n      i0.ɵɵtext(12, \"New Contact\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11);\n      i0.ɵɵtemplate(15, ContactListComponent_cms_contact_item_15_Template, 1, 5, \"cms-contact-item\", 12);\n      i0.ɵɵpipe(16, \"contactsFilter\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c1));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(16, 2, ctx.contacts, ctx.term));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink, i4.DraggableComponent, i5.ContactItemComponent, i6.ContactsFilterPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;IAkBMA,uCACgG;;;;IADpBA,sCAAqB;;;;;;ACRvG,OAAM,MAAOC,oBAAoB;EAK/BC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAJlC,aAAQ,GAAc,EAAE;EAI6B;EAErDC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE;IACjD,IAAI,CAACH,cAAc,CAACI,mBAAmB,CAACC,SAAS,CAAEH,QAAmB,IAAI;MACxE,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CAAC;IACF,IAAI,CAACI,YAAY,GAAG,IAAI,CAACN,cAAc,CAACO,uBAAuB,CAACF,SAAS,CACtEG,YAAuB,IAAI;MAC1B,IAAI,CAACN,QAAQ,GAAGM,YAAY;IAC9B,CAAC,CACF;EACH;EACAC,WAAW;IACT,IAAI,CAACH,YAAY,CAACI,WAAW,EAAE;EACjC;EACAC,MAAM,CAACC,KAAa;IAClB,IAAI,CAACC,IAAI,GAAGD,KAAK;EACnB;;AAvBWd,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDVjCrB,8BAAiC;MAGiBA,wBAAQ;MAAAA,iBAAO;MAE7DA,8BAAiB;MAGXA;QAAAA;QAAA;QAAA,OAASA,oCAAuB;MAAA,EAAC;MADnCA,iBACoC;MACpCA,8BAA4F;MAAlCA;QAAAA;QAAA;QAAA,OAASA,oCAAuB;MAAA,EAAC;MAACA,iBAAM;MAEpGA,+BAAuC;MACaA,4BAAW;MAAAA,iBAAI;MAIvEA,gCAAwB;MAEpBA,kGACgG;;MAElGA,iBAAM;;;MATyBA,gBAAsB;MAAtBA,uDAAsB;MAMXA,eAAkC;MAAlCA,uEAAkC","names":["i0","ContactListComponent","constructor","contactService","ngOnInit","contacts","getContacts","contactChangedEvent","subscribe","subscription","contactListChangedEvent","contactsList","ngOnDestroy","unsubscribe","search","value","term","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\laragon\\www\\cms_app\\src\\app\\contacts\\contact-list\\contact-list.component.html","C:\\laragon\\www\\cms_app\\src\\app\\contacts\\contact-list\\contact-list.component.ts"],"sourcesContent":["<div class=\"panel panel-default\">\n  <div class=\"panel-heading\">\n    <div class=\"row\">\n      <span class=\"title pad-left-right\" style=\"\">Contacts</span>\n    </div>\n    <div class=\"row\">\n      <div class=\"input-group pull-left pad-left-right col-xs-7\">\n        <input class=\"form-control\" placeholder=\"Enter a search value\" type=\"text\" #searchBox\n          (keyup)=\"search(searchBox.value)\">\n        <div class=\"glyphicon glyphicon-search input-group-addon\" (click)=\"search(searchBox.value)\"></div>\n      </div>\n      <div class=\"pull-right pad-left-right\">\n        <a class=\"btn btn-success\" [routerLink]=\"['new']\">New Contact</a>\n      </div>\n    </div>\n  </div>\n  <div class=\"panel-body\">\n    <div class=\"col-xs-12\">\n      <cms-contact-item *ngFor=\"let contactEl of contacts | contactsFilter: term\" [contact]=\"contactEl\" dnd-draggable\n        [dragEnabled]=\"true\" [dragData]=\"contactEl\" [dropZones]=\"['contactGroup']\"></cms-contact-item>\n\n    </div>\n  </div>\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Contact } from '../contact.model';\nimport { ContactService } from '../contact.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cms-contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.css'],\n})\nexport class ContactListComponent implements OnInit, OnDestroy {\n  contacts: Contact[] = [];\n  term: string;\n  private subscription: Subscription;\n\n  constructor(private contactService: ContactService) {}\n\n  ngOnInit() {\n    this.contacts = this.contactService.getContacts();\n    this.contactService.contactChangedEvent.subscribe((contacts: Contact[]) => {\n      this.contacts = contacts;\n    });\n    this.subscription = this.contactService.contactListChangedEvent.subscribe(\n      (contactsList: Contact[]) => {\n        this.contacts = contactsList;\n      }\n    );\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  search(value: string) {\n    this.term = value;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}