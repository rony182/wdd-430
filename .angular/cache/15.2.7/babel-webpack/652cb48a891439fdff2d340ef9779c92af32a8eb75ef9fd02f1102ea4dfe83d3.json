{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ContactService = /*#__PURE__*/(() => {\n  class ContactService {\n    constructor(http) {\n      this.http = http;\n      this.contactListChangedEvent = new Subject();\n      this.contactSelectedEvent = new EventEmitter();\n      this.contactChangedEvent = new EventEmitter();\n      this.contacts = [];\n      this.http.get('https://cms-project-1ccee-default-rtdb.firebaseio.com/contacts.json').subscribe(contacts => {\n        this.contacts = contacts;\n        this.maxContactId = this.getMaxId();\n        this.contacts.sort((a, b) => a.name > b.name ? 1 : b.name > a.name ? -1 : 0);\n        this.contactListChangedEvent.next(this.contacts.slice());\n      }, error => {\n        console.log(error);\n      });\n    }\n    getContacts() {\n      return this.contacts.slice();\n    }\n    getContact(id) {\n      for (let contact of this.contacts) {\n        if (contact.id === id) {\n          return contact;\n        }\n      }\n      return null;\n    }\n    deleteContact(contact) {\n      if (contact === null) {\n        return;\n      }\n      const pos = this.contacts.indexOf(contact);\n      if (pos < 0) {\n        return;\n      }\n      this.contacts.splice(pos, 1);\n      this.storeContacts();\n    }\n    getMaxId() {\n      let maxId = 0;\n      for (let contact of this.contacts) {\n        let currentId = parseInt(contact.id);\n        if (currentId > maxId) {\n          maxId = currentId;\n        }\n      }\n      return maxId.toString();\n    }\n    addContact(newContact) {\n      if (!newContact) {\n        return;\n      }\n      let currentId = parseInt(newContact.id);\n      currentId++;\n      newContact.id = currentId.toString();\n      this.contacts.push(newContact);\n      this.storeContacts();\n    }\n    updateContact(originalContact, newContact) {\n      if (!originalContact || !newContact) {\n        return;\n      }\n      const pos = this.contacts.indexOf(originalContact);\n      if (pos < 0) {\n        return;\n      }\n      newContact.id = originalContact.id;\n      this.contacts[pos] = newContact;\n      this.storeContacts();\n    }\n    storeContacts() {\n      let contacts = JSON.stringify(this.contacts);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      this.http.put('https://cms-project-1ccee-default-rtdb.firebaseio.com/contacts.json', contacts, {\n        headers: headers\n      }).subscribe(() => {\n        this.contactListChangedEvent.next(this.contacts.slice());\n      });\n    }\n  }\n  ContactService.ɵfac = function ContactService_Factory(t) {\n    return new (t || ContactService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ContactService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContactService,\n    factory: ContactService.ɵfac,\n    providedIn: 'root'\n  });\n  return ContactService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}