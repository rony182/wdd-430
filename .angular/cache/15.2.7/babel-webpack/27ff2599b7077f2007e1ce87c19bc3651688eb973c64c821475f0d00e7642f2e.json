{"ast":null,"code":"import { ChangeDetectorRef, Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, Output } from '@angular/core';\nimport { FormArray } from '@angular/forms';\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n/**\n * Check and return true if an object is type of string\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isString(obj) {\n  return typeof obj === \"string\";\n}\n/**\n * Check and return true if an object not undefined or null\n */\nfunction isPresent(obj) {\n  return obj !== undefined && obj !== null;\n}\n/**\n * Check and return true if an object is type of Function\n */\nfunction isFunction(obj) {\n  return typeof obj === \"function\";\n}\n/**\n * Create Image element with specified url string\n */\nfunction createImage(src) {\n  let img = new HTMLImageElement();\n  img.src = src;\n  return img;\n}\n/**\n * Call the function\n */\nfunction callFun(fun) {\n  return fun();\n}\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nclass DataTransferEffect {\n  constructor(name) {\n    this.name = name;\n  }\n}\nDataTransferEffect.COPY = new DataTransferEffect('copy');\nDataTransferEffect.LINK = new DataTransferEffect('link');\nDataTransferEffect.MOVE = new DataTransferEffect('move');\nDataTransferEffect.NONE = new DataTransferEffect('none');\nclass DragImage {\n  constructor(imageElement, x_offset = 0, y_offset = 0) {\n    this.imageElement = imageElement;\n    this.x_offset = x_offset;\n    this.y_offset = y_offset;\n    if (isString(this.imageElement)) {\n      // Create real image from string source\n      let imgScr = this.imageElement;\n      this.imageElement = new HTMLImageElement();\n      this.imageElement.src = imgScr;\n    }\n  }\n}\nclass DragDropConfig {\n  constructor() {\n    this.onDragStartClass = \"dnd-drag-start\";\n    this.onDragEnterClass = \"dnd-drag-enter\";\n    this.onDragOverClass = \"dnd-drag-over\";\n    this.onSortableDragClass = \"dnd-sortable-drag\";\n    this.dragEffect = DataTransferEffect.MOVE;\n    this.dropEffect = DataTransferEffect.MOVE;\n    this.dragCursor = \"move\";\n    this.defaultCursor = \"pointer\";\n  }\n}\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$1 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nclass DragDropData {}\nfunction dragDropServiceFactory() {\n  return new DragDropService();\n}\nlet DragDropService = class DragDropService {\n  constructor() {\n    this.allowedDropZones = [];\n  }\n};\nDragDropService.ɵfac = function DragDropService_Factory(t) {\n  return new (t || DragDropService)();\n};\nDragDropService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DragDropService,\n  factory: function (t) {\n    return DragDropService.ɵfac(t);\n  }\n});\nfunction dragDropSortableServiceFactory(config) {\n  return new DragDropSortableService(config);\n}\nlet DragDropSortableService = class DragDropSortableService {\n  constructor(_config) {\n    this._config = _config;\n  }\n  get elem() {\n    return this._elem;\n  }\n  markSortable(elem) {\n    if (isPresent(this._elem)) {\n      this._elem.classList.remove(this._config.onSortableDragClass);\n    }\n    if (isPresent(elem)) {\n      this._elem = elem;\n      this._elem.classList.add(this._config.onSortableDragClass);\n    }\n  }\n};\nDragDropSortableService.ɵfac = function DragDropSortableService_Factory(t) {\n  return new (t || DragDropSortableService)(ɵngcc0.ɵɵinject(DragDropConfig));\n};\nDragDropSortableService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DragDropSortableService,\n  factory: function (t) {\n    return DragDropSortableService.ɵfac(t);\n  }\n});\nDragDropSortableService = __decorate$1([__metadata(\"design:paramtypes\", [DragDropConfig])], DragDropSortableService);\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$3 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$2 = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nlet AbstractComponent = class AbstractComponent {\n  constructor(elemRef, _dragDropService, _config, _cdr) {\n    this._dragDropService = _dragDropService;\n    this._config = _config;\n    this._cdr = _cdr;\n    /**\n     * Whether the object is draggable. Default is true.\n     */\n    this._dragEnabled = false;\n    /**\n     * Allows drop on this element\n     */\n    this.dropEnabled = false;\n    this.dropZones = [];\n    this.cloneItem = false;\n    // Assign default cursor unless overridden\n    this._defaultCursor = _config.defaultCursor;\n    this._elem = elemRef.nativeElement;\n    this._elem.style.cursor = this._defaultCursor; // set default cursor on our element\n    //\n    // DROP events\n    //\n    this._elem.ondragenter = event => {\n      this._onDragEnter(event);\n    };\n    this._elem.ondragover = event => {\n      this._onDragOver(event);\n      //\n      if (event.dataTransfer != null) {\n        event.dataTransfer.dropEffect = this._config.dropEffect.name;\n      }\n      return false;\n    };\n    this._elem.ondragleave = event => {\n      this._onDragLeave(event);\n    };\n    this._elem.ondrop = event => {\n      this._onDrop(event);\n    };\n    //\n    // Drag events\n    //\n    this._elem.onmousedown = event => {\n      this._target = event.target;\n    };\n    this._elem.ondragstart = event => {\n      if (this._dragHandle) {\n        if (!this._dragHandle.contains(this._target)) {\n          event.preventDefault();\n          return;\n        }\n      }\n      this._onDragStart(event);\n      //\n      if (event.dataTransfer != null) {\n        event.dataTransfer.setData('text', '');\n        // Change drag effect\n        event.dataTransfer.effectAllowed = this.effectAllowed || this._config.dragEffect.name;\n        // Change drag image\n        if (isPresent(this.dragImage)) {\n          if (isString(this.dragImage)) {\n            event.dataTransfer.setDragImage(createImage(this.dragImage));\n          } else if (isFunction(this.dragImage)) {\n            event.dataTransfer.setDragImage(callFun(this.dragImage));\n          } else {\n            let img = this.dragImage;\n            event.dataTransfer.setDragImage(img.imageElement, img.x_offset, img.y_offset);\n          }\n        } else if (isPresent(this._config.dragImage)) {\n          let dragImage = this._config.dragImage;\n          event.dataTransfer.setDragImage(dragImage.imageElement, dragImage.x_offset, dragImage.y_offset);\n        } else if (this.cloneItem) {\n          this._dragHelper = this._elem.cloneNode(true);\n          this._dragHelper.classList.add('dnd-drag-item');\n          this._dragHelper.style.position = \"absolute\";\n          this._dragHelper.style.top = \"0px\";\n          this._dragHelper.style.left = \"-1000px\";\n          this._elem.parentElement.appendChild(this._dragHelper);\n          event.dataTransfer.setDragImage(this._dragHelper, event.offsetX, event.offsetY);\n        }\n        // Change drag cursor\n        let cursorelem = this._dragHandle ? this._dragHandle : this._elem;\n        if (this._dragEnabled) {\n          cursorelem.style.cursor = this.effectCursor ? this.effectCursor : this._config.dragCursor;\n        } else {\n          cursorelem.style.cursor = this._defaultCursor;\n        }\n      }\n    };\n    this._elem.ondragend = event => {\n      if (this._elem.parentElement && this._dragHelper) {\n        this._elem.parentElement.removeChild(this._dragHelper);\n      }\n      // console.log('ondragend', event.target);\n      this._onDragEnd(event);\n      // Restore style of dragged element\n      let cursorelem = this._dragHandle ? this._dragHandle : this._elem;\n      cursorelem.style.cursor = this._defaultCursor;\n    };\n  }\n  set dragEnabled(enabled) {\n    this._dragEnabled = !!enabled;\n    this._elem.draggable = this._dragEnabled;\n  }\n  get dragEnabled() {\n    return this._dragEnabled;\n  }\n  setDragHandle(elem) {\n    this._dragHandle = elem;\n  }\n  /******* Change detection ******/\n  detectChanges() {\n    // Programmatically run change detection to fix issue in Safari\n    setTimeout(() => {\n      if (this._cdr && !this._cdr.destroyed) {\n        this._cdr.detectChanges();\n      }\n    }, 250);\n  }\n  //****** Droppable *******//\n  _onDragEnter(event) {\n    // console.log('ondragenter._isDropAllowed', this._isDropAllowed);\n    if (this._isDropAllowed(event)) {\n      // event.preventDefault();\n      this._onDragEnterCallback(event);\n    }\n  }\n  _onDragOver(event) {\n    // // console.log('ondragover._isDropAllowed', this._isDropAllowed);\n    if (this._isDropAllowed(event)) {\n      // The element is over the same source element - do nothing\n      if (event.preventDefault) {\n        // Necessary. Allows us to drop.\n        event.preventDefault();\n      }\n      this._onDragOverCallback(event);\n    }\n  }\n  _onDragLeave(event) {\n    // console.log('ondragleave._isDropAllowed', this._isDropAllowed);\n    if (this._isDropAllowed(event)) {\n      // event.preventDefault();\n      this._onDragLeaveCallback(event);\n    }\n  }\n  _onDrop(event) {\n    // console.log('ondrop._isDropAllowed', this._isDropAllowed);\n    if (this._isDropAllowed(event)) {\n      // Necessary. Allows us to drop.\n      this._preventAndStop(event);\n      this._onDropCallback(event);\n      this.detectChanges();\n    }\n  }\n  _isDropAllowed(event) {\n    if ((this._dragDropService.isDragged || event.dataTransfer && event.dataTransfer.files) && this.dropEnabled) {\n      // First, if `allowDrop` is set, call it to determine whether the\n      // dragged element can be dropped here.\n      if (this.allowDrop) {\n        return this.allowDrop(this._dragDropService.dragData);\n      }\n      // Otherwise, use dropZones if they are set.\n      if (this.dropZones.length === 0 && this._dragDropService.allowedDropZones.length === 0) {\n        return true;\n      }\n      for (let i = 0; i < this._dragDropService.allowedDropZones.length; i++) {\n        let dragZone = this._dragDropService.allowedDropZones[i];\n        if (this.dropZones.indexOf(dragZone) !== -1) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  _preventAndStop(event) {\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    }\n  }\n  //*********** Draggable **********//\n  _onDragStart(event) {\n    //console.log('ondragstart.dragEnabled', this._dragEnabled);\n    if (this._dragEnabled) {\n      this._dragDropService.allowedDropZones = this.dropZones;\n      // console.log('ondragstart.allowedDropZones', this._dragDropService.allowedDropZones);\n      this._onDragStartCallback(event);\n    }\n  }\n  _onDragEnd(event) {\n    this._dragDropService.allowedDropZones = [];\n    // console.log('ondragend.allowedDropZones', this._dragDropService.allowedDropZones);\n    this._onDragEndCallback(event);\n  }\n  //**** Drop Callbacks ****//\n  _onDragEnterCallback(event) {}\n  _onDragOverCallback(event) {}\n  _onDragLeaveCallback(event) {}\n  _onDropCallback(event) {}\n  //**** Drag Callbacks ****//\n  _onDragStartCallback(event) {}\n  _onDragEndCallback(event) {}\n};\nAbstractComponent.ɵfac = function AbstractComponent_Factory(t) {\n  return new (t || AbstractComponent)(ɵngcc0.ɵɵinject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinject(DragDropService), ɵngcc0.ɵɵinject(DragDropConfig), ɵngcc0.ɵɵinject(ɵngcc0.ChangeDetectorRef));\n};\nAbstractComponent.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: AbstractComponent,\n  factory: function (t) {\n    return AbstractComponent.ɵfac(t);\n  }\n});\nAbstractComponent = __decorate$3([__metadata$2(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, ChangeDetectorRef])], AbstractComponent);\nclass AbstractHandleComponent {\n  constructor(elemRef, _dragDropService, _config, _Component, _cdr) {\n    this._dragDropService = _dragDropService;\n    this._config = _config;\n    this._Component = _Component;\n    this._cdr = _cdr;\n    this._elem = elemRef.nativeElement;\n    this._Component.setDragHandle(this._elem);\n  }\n}\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$2 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$1 = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nlet DraggableComponent = class DraggableComponent extends AbstractComponent {\n  constructor(elemRef, dragDropService, config, cdr) {\n    super(elemRef, dragDropService, config, cdr);\n    /**\n     * Callback function called when the drag actions happened.\n     */\n    this.onDragStart = new EventEmitter();\n    this.onDragEnd = new EventEmitter();\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    this.onDragSuccessCallback = new EventEmitter();\n    this._defaultCursor = this._elem.style.cursor;\n    this.dragEnabled = true;\n  }\n  set draggable(value) {\n    this.dragEnabled = !!value;\n  }\n  set dropzones(value) {\n    this.dropZones = value;\n  }\n  /**\n   * Drag allowed effect\n   */\n  set effectallowed(value) {\n    this.effectAllowed = value;\n  }\n  /**\n   * Drag effect cursor\n   */\n  set effectcursor(value) {\n    this.effectCursor = value;\n  }\n  _onDragStartCallback(event) {\n    this._dragDropService.isDragged = true;\n    this._dragDropService.dragData = this.dragData;\n    this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n    this._elem.classList.add(this._config.onDragStartClass);\n    //\n    this.onDragStart.emit({\n      dragData: this.dragData,\n      mouseEvent: event\n    });\n  }\n  _onDragEndCallback(event) {\n    this._dragDropService.isDragged = false;\n    this._dragDropService.dragData = null;\n    this._dragDropService.onDragSuccessCallback = null;\n    this._elem.classList.remove(this._config.onDragStartClass);\n    //\n    this.onDragEnd.emit({\n      dragData: this.dragData,\n      mouseEvent: event\n    });\n  }\n};\nDraggableComponent.ɵfac = function DraggableComponent_Factory(t) {\n  return new (t || DraggableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nDraggableComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DraggableComponent,\n  selectors: [[\"\", \"dnd-draggable\", \"\"]],\n  inputs: {\n    draggable: [\"dragEnabled\", \"draggable\"],\n    dropzones: [\"dropZones\", \"dropzones\"],\n    effectallowed: [\"effectAllowed\", \"effectallowed\"],\n    effectcursor: [\"effectCursor\", \"effectcursor\"],\n    dragData: \"dragData\",\n    dragImage: \"dragImage\",\n    cloneItem: \"cloneItem\"\n  },\n  outputs: {\n    onDragStart: \"onDragStart\",\n    onDragEnd: \"onDragEnd\",\n    onDragSuccessCallback: \"onDragSuccess\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n__decorate$2([Input(\"dragEnabled\"), __metadata$1(\"design:type\", Boolean), __metadata$1(\"design:paramtypes\", [Boolean])], DraggableComponent.prototype, \"draggable\", null);\n__decorate$2([Output(), __metadata$1(\"design:type\", EventEmitter)], DraggableComponent.prototype, \"onDragStart\", void 0);\n__decorate$2([Output(), __metadata$1(\"design:type\", EventEmitter)], DraggableComponent.prototype, \"onDragEnd\", void 0);\n__decorate$2([Input(), __metadata$1(\"design:type\", Object)], DraggableComponent.prototype, \"dragData\", void 0);\n__decorate$2([Output(\"onDragSuccess\"), __metadata$1(\"design:type\", EventEmitter)], DraggableComponent.prototype, \"onDragSuccessCallback\", void 0);\n__decorate$2([Input(\"dropZones\"), __metadata$1(\"design:type\", Array), __metadata$1(\"design:paramtypes\", [Array])], DraggableComponent.prototype, \"dropzones\", null);\n__decorate$2([Input(\"effectAllowed\"), __metadata$1(\"design:type\", String), __metadata$1(\"design:paramtypes\", [String])], DraggableComponent.prototype, \"effectallowed\", null);\n__decorate$2([Input(\"effectCursor\"), __metadata$1(\"design:type\", String), __metadata$1(\"design:paramtypes\", [String])], DraggableComponent.prototype, \"effectcursor\", null);\n__decorate$2([Input(), __metadata$1(\"design:type\", Object)], DraggableComponent.prototype, \"dragImage\", void 0);\n__decorate$2([Input(), __metadata$1(\"design:type\", Boolean)], DraggableComponent.prototype, \"cloneItem\", void 0);\nDraggableComponent = __decorate$2([__metadata$1(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, ChangeDetectorRef])], DraggableComponent);\nlet DraggableHandleComponent = class DraggableHandleComponent extends AbstractHandleComponent {\n  constructor(elemRef, dragDropService, config, _Component, cdr) {\n    super(elemRef, dragDropService, config, _Component, cdr);\n  }\n};\nDraggableHandleComponent.ɵfac = function DraggableHandleComponent_Factory(t) {\n  return new (t || DraggableHandleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(DraggableComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nDraggableHandleComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DraggableHandleComponent,\n  selectors: [[\"\", \"dnd-draggable-handle\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nDraggableHandleComponent = __decorate$2([__metadata$1(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, DraggableComponent, ChangeDetectorRef])], DraggableHandleComponent);\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$4 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$3 = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nlet DroppableComponent = class DroppableComponent extends AbstractComponent {\n  constructor(elemRef, dragDropService, config, cdr) {\n    super(elemRef, dragDropService, config, cdr);\n    /**\n     * Callback function called when the drop action completes correctly.\n     * It is activated before the on-drag-success callback.\n     */\n    this.onDropSuccess = new EventEmitter();\n    this.onDragEnter = new EventEmitter();\n    this.onDragOver = new EventEmitter();\n    this.onDragLeave = new EventEmitter();\n    this.dropEnabled = true;\n  }\n  set droppable(value) {\n    this.dropEnabled = !!value;\n  }\n  set allowdrop(value) {\n    this.allowDrop = value;\n  }\n  set dropzones(value) {\n    this.dropZones = value;\n  }\n  /**\n   * Drag allowed effect\n   */\n  set effectallowed(value) {\n    this.effectAllowed = value;\n  }\n  /**\n   * Drag effect cursor\n   */\n  set effectcursor(value) {\n    this.effectCursor = value;\n  }\n  _onDragEnterCallback(event) {\n    if (this._dragDropService.isDragged) {\n      this._elem.classList.add(this._config.onDragEnterClass);\n      this.onDragEnter.emit({\n        dragData: this._dragDropService.dragData,\n        mouseEvent: event\n      });\n    }\n  }\n  _onDragOverCallback(event) {\n    if (this._dragDropService.isDragged) {\n      this._elem.classList.add(this._config.onDragOverClass);\n      this.onDragOver.emit({\n        dragData: this._dragDropService.dragData,\n        mouseEvent: event\n      });\n    }\n  }\n  _onDragLeaveCallback(event) {\n    if (this._dragDropService.isDragged) {\n      this._elem.classList.remove(this._config.onDragOverClass);\n      this._elem.classList.remove(this._config.onDragEnterClass);\n      this.onDragLeave.emit({\n        dragData: this._dragDropService.dragData,\n        mouseEvent: event\n      });\n    }\n  }\n  _onDropCallback(event) {\n    let dataTransfer = event.dataTransfer;\n    if (this._dragDropService.isDragged || dataTransfer && dataTransfer.files) {\n      this.onDropSuccess.emit({\n        dragData: this._dragDropService.dragData,\n        mouseEvent: event\n      });\n      if (this._dragDropService.onDragSuccessCallback) {\n        this._dragDropService.onDragSuccessCallback.emit({\n          dragData: this._dragDropService.dragData,\n          mouseEvent: event\n        });\n      }\n      this._elem.classList.remove(this._config.onDragOverClass);\n      this._elem.classList.remove(this._config.onDragEnterClass);\n    }\n  }\n};\nDroppableComponent.ɵfac = function DroppableComponent_Factory(t) {\n  return new (t || DroppableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nDroppableComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: DroppableComponent,\n  selectors: [[\"\", \"dnd-droppable\", \"\"]],\n  inputs: {\n    droppable: [\"dropEnabled\", \"droppable\"],\n    allowdrop: [\"allowDrop\", \"allowdrop\"],\n    dropzones: [\"dropZones\", \"dropzones\"],\n    effectallowed: [\"effectAllowed\", \"effectallowed\"],\n    effectcursor: [\"effectCursor\", \"effectcursor\"]\n  },\n  outputs: {\n    onDropSuccess: \"onDropSuccess\",\n    onDragEnter: \"onDragEnter\",\n    onDragOver: \"onDragOver\",\n    onDragLeave: \"onDragLeave\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n__decorate$4([Input(\"dropEnabled\"), __metadata$3(\"design:type\", Boolean), __metadata$3(\"design:paramtypes\", [Boolean])], DroppableComponent.prototype, \"droppable\", null);\n__decorate$4([Output(), __metadata$3(\"design:type\", EventEmitter)], DroppableComponent.prototype, \"onDropSuccess\", void 0);\n__decorate$4([Output(), __metadata$3(\"design:type\", EventEmitter)], DroppableComponent.prototype, \"onDragEnter\", void 0);\n__decorate$4([Output(), __metadata$3(\"design:type\", EventEmitter)], DroppableComponent.prototype, \"onDragOver\", void 0);\n__decorate$4([Output(), __metadata$3(\"design:type\", EventEmitter)], DroppableComponent.prototype, \"onDragLeave\", void 0);\n__decorate$4([Input(\"allowDrop\"), __metadata$3(\"design:type\", Function), __metadata$3(\"design:paramtypes\", [Function])], DroppableComponent.prototype, \"allowdrop\", null);\n__decorate$4([Input(\"dropZones\"), __metadata$3(\"design:type\", Array), __metadata$3(\"design:paramtypes\", [Array])], DroppableComponent.prototype, \"dropzones\", null);\n__decorate$4([Input(\"effectAllowed\"), __metadata$3(\"design:type\", String), __metadata$3(\"design:paramtypes\", [String])], DroppableComponent.prototype, \"effectallowed\", null);\n__decorate$4([Input(\"effectCursor\"), __metadata$3(\"design:type\", String), __metadata$3(\"design:paramtypes\", [String])], DroppableComponent.prototype, \"effectcursor\", null);\nDroppableComponent = __decorate$4([__metadata$3(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, ChangeDetectorRef])], DroppableComponent);\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$5 = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$4 = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nlet SortableContainer = class SortableContainer extends AbstractComponent {\n  constructor(elemRef, dragDropService, config, cdr, _sortableDataService) {\n    super(elemRef, dragDropService, config, cdr);\n    this._sortableDataService = _sortableDataService;\n    this._sortableData = [];\n    this.dragEnabled = false;\n  }\n  set draggable(value) {\n    this.dragEnabled = !!value;\n  }\n  set sortableData(sortableData) {\n    this._sortableData = sortableData;\n    if (sortableData instanceof FormArray) {\n      this.sortableHandler = new SortableFormArrayHandler();\n    } else {\n      this.sortableHandler = new SortableArrayHandler();\n    }\n    //\n    this.dropEnabled = !!this._sortableData;\n    // console.log(\"collection is changed, drop enabled: \" + this.dropEnabled);\n  }\n\n  get sortableData() {\n    return this._sortableData;\n  }\n  set dropzones(value) {\n    this.dropZones = value;\n  }\n  _onDragEnterCallback(event) {\n    if (this._sortableDataService.isDragged) {\n      let item = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n      // Check does element exist in sortableData of this Container\n      if (this.indexOf(item) === -1) {\n        // Let's add it\n        // console.log('Container._onDragEnterCallback. drag node [' + this._sortableDataService.index.toString() + '] over parent node');\n        // Remove item from previouse list\n        this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n        if (this._sortableDataService.sortableContainer._sortableData.length === 0) {\n          this._sortableDataService.sortableContainer.dropEnabled = true;\n        }\n        // Add item to new list\n        this.insertItemAt(item, 0);\n        this._sortableDataService.sortableContainer = this;\n        this._sortableDataService.index = 0;\n      }\n      // Refresh changes in properties of container component\n      this.detectChanges();\n    }\n  }\n  getItemAt(index) {\n    return this.sortableHandler.getItemAt(this._sortableData, index);\n  }\n  indexOf(item) {\n    return this.sortableHandler.indexOf(this._sortableData, item);\n  }\n  removeItemAt(index) {\n    this.sortableHandler.removeItemAt(this._sortableData, index);\n  }\n  insertItemAt(item, index) {\n    this.sortableHandler.insertItemAt(this._sortableData, item, index);\n  }\n};\nSortableContainer.ɵfac = function SortableContainer_Factory(t) {\n  return new (t || SortableContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DragDropSortableService));\n};\nSortableContainer.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: SortableContainer,\n  selectors: [[\"\", \"dnd-sortable-container\", \"\"]],\n  inputs: {\n    draggable: [\"dragEnabled\", \"draggable\"],\n    sortableData: \"sortableData\",\n    dropzones: [\"dropZones\", \"dropzones\"]\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n__decorate$5([Input(\"dragEnabled\"), __metadata$4(\"design:type\", Boolean), __metadata$4(\"design:paramtypes\", [Boolean])], SortableContainer.prototype, \"draggable\", null);\n__decorate$5([Input(), __metadata$4(\"design:type\", Object), __metadata$4(\"design:paramtypes\", [Object])], SortableContainer.prototype, \"sortableData\", null);\n__decorate$5([Input(\"dropZones\"), __metadata$4(\"design:type\", Array), __metadata$4(\"design:paramtypes\", [Array])], SortableContainer.prototype, \"dropzones\", null);\nSortableContainer = __decorate$5([__metadata$4(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, ChangeDetectorRef, DragDropSortableService])], SortableContainer);\nclass SortableArrayHandler {\n  getItemAt(sortableData, index) {\n    return sortableData[index];\n  }\n  indexOf(sortableData, item) {\n    return sortableData.indexOf(item);\n  }\n  removeItemAt(sortableData, index) {\n    sortableData.splice(index, 1);\n  }\n  insertItemAt(sortableData, item, index) {\n    sortableData.splice(index, 0, item);\n  }\n}\nclass SortableFormArrayHandler {\n  getItemAt(sortableData, index) {\n    return sortableData.at(index);\n  }\n  indexOf(sortableData, item) {\n    return sortableData.controls.indexOf(item);\n  }\n  removeItemAt(sortableData, index) {\n    sortableData.removeAt(index);\n  }\n  insertItemAt(sortableData, item, index) {\n    sortableData.insert(index, item);\n  }\n}\nlet SortableComponent = class SortableComponent extends AbstractComponent {\n  constructor(elemRef, dragDropService, config, _sortableContainer, _sortableDataService, cdr) {\n    super(elemRef, dragDropService, config, cdr);\n    this._sortableContainer = _sortableContainer;\n    this._sortableDataService = _sortableDataService;\n    /**\n     * Callback function called when the drag action ends with a valid drop action.\n     * It is activated after the on-drop-success callback\n     */\n    this.onDragSuccessCallback = new EventEmitter();\n    this.onDragStartCallback = new EventEmitter();\n    this.onDragOverCallback = new EventEmitter();\n    this.onDragEndCallback = new EventEmitter();\n    this.onDropSuccessCallback = new EventEmitter();\n    this.dropZones = this._sortableContainer.dropZones;\n    this.dragEnabled = true;\n    this.dropEnabled = true;\n  }\n  set draggable(value) {\n    this.dragEnabled = !!value;\n  }\n  set droppable(value) {\n    this.dropEnabled = !!value;\n  }\n  /**\n   * Drag allowed effect\n   */\n  set effectallowed(value) {\n    this.effectAllowed = value;\n  }\n  /**\n   * Drag effect cursor\n   */\n  set effectcursor(value) {\n    this.effectCursor = value;\n  }\n  _onDragStartCallback(event) {\n    // console.log('_onDragStartCallback. dragging elem with index ' + this.index);\n    this._sortableDataService.isDragged = true;\n    this._sortableDataService.sortableContainer = this._sortableContainer;\n    this._sortableDataService.index = this.index;\n    this._sortableDataService.markSortable(this._elem);\n    // Add dragData\n    this._dragDropService.isDragged = true;\n    this._dragDropService.dragData = this.dragData;\n    this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n    //\n    this.onDragStartCallback.emit(this._dragDropService.dragData);\n  }\n  _onDragOverCallback(event) {\n    if (this._sortableDataService.isDragged && this._elem !== this._sortableDataService.elem) {\n      // console.log('_onDragOverCallback. dragging elem with index ' + this.index);\n      this._sortableDataService.sortableContainer = this._sortableContainer;\n      this._sortableDataService.index = this.index;\n      this._sortableDataService.markSortable(this._elem);\n      this.onDragOverCallback.emit(this._dragDropService.dragData);\n    }\n  }\n  _onDragEndCallback(event) {\n    // console.log('_onDragEndCallback. end dragging elem with index ' + this.index);\n    this._sortableDataService.isDragged = false;\n    this._sortableDataService.sortableContainer = null;\n    this._sortableDataService.index = null;\n    this._sortableDataService.markSortable(null);\n    // Add dragGata\n    this._dragDropService.isDragged = false;\n    this._dragDropService.dragData = null;\n    this._dragDropService.onDragSuccessCallback = null;\n    //\n    this.onDragEndCallback.emit(this._dragDropService.dragData);\n  }\n  _onDragEnterCallback(event) {\n    if (this._sortableDataService.isDragged) {\n      this._sortableDataService.markSortable(this._elem);\n      if (this.index !== this._sortableDataService.index || this._sortableDataService.sortableContainer.sortableData !== this._sortableContainer.sortableData) {\n        // console.log('Component._onDragEnterCallback. drag node [' + this.index + '] over node [' + this._sortableDataService.index + ']');\n        // Get item\n        let item = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n        // Remove item from previouse list\n        this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n        if (this._sortableDataService.sortableContainer.sortableData.length === 0) {\n          this._sortableDataService.sortableContainer.dropEnabled = true;\n        }\n        // Add item to new list\n        this._sortableContainer.insertItemAt(item, this.index);\n        if (this._sortableContainer.dropEnabled) {\n          this._sortableContainer.dropEnabled = false;\n        }\n        this._sortableDataService.sortableContainer = this._sortableContainer;\n        this._sortableDataService.index = this.index;\n        this.detectChanges();\n      }\n    }\n  }\n  _onDropCallback(event) {\n    if (this._sortableDataService.isDragged) {\n      // console.log('onDropCallback.onDropSuccessCallback.dragData', this._dragDropService.dragData);\n      this.onDropSuccessCallback.emit(this._dragDropService.dragData);\n      if (this._dragDropService.onDragSuccessCallback) {\n        // console.log('onDropCallback.onDragSuccessCallback.dragData', this._dragDropService.dragData);\n        this._dragDropService.onDragSuccessCallback.emit(this._dragDropService.dragData);\n      }\n      // Refresh changes in properties of container component\n      this._sortableContainer.detectChanges();\n    }\n  }\n};\nSortableComponent.ɵfac = function SortableComponent_Factory(t) {\n  return new (t || SortableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(SortableContainer), ɵngcc0.ɵɵdirectiveInject(DragDropSortableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nSortableComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: SortableComponent,\n  selectors: [[\"\", \"dnd-sortable\", \"\"]],\n  inputs: {\n    draggable: [\"dragEnabled\", \"draggable\"],\n    droppable: [\"dropEnabled\", \"droppable\"],\n    effectallowed: [\"effectAllowed\", \"effectallowed\"],\n    effectcursor: [\"effectCursor\", \"effectcursor\"],\n    index: [\"sortableIndex\", \"index\"],\n    dragData: \"dragData\"\n  },\n  outputs: {\n    onDragSuccessCallback: \"onDragSuccess\",\n    onDragStartCallback: \"onDragStart\",\n    onDragOverCallback: \"onDragOver\",\n    onDragEndCallback: \"onDragEnd\",\n    onDropSuccessCallback: \"onDropSuccess\"\n  },\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\n__decorate$5([Input('sortableIndex'), __metadata$4(\"design:type\", Number)], SortableComponent.prototype, \"index\", void 0);\n__decorate$5([Input(\"dragEnabled\"), __metadata$4(\"design:type\", Boolean), __metadata$4(\"design:paramtypes\", [Boolean])], SortableComponent.prototype, \"draggable\", null);\n__decorate$5([Input(\"dropEnabled\"), __metadata$4(\"design:type\", Boolean), __metadata$4(\"design:paramtypes\", [Boolean])], SortableComponent.prototype, \"droppable\", null);\n__decorate$5([Input(), __metadata$4(\"design:type\", Object)], SortableComponent.prototype, \"dragData\", void 0);\n__decorate$5([Input(\"effectAllowed\"), __metadata$4(\"design:type\", String), __metadata$4(\"design:paramtypes\", [String])], SortableComponent.prototype, \"effectallowed\", null);\n__decorate$5([Input(\"effectCursor\"), __metadata$4(\"design:type\", String), __metadata$4(\"design:paramtypes\", [String])], SortableComponent.prototype, \"effectcursor\", null);\n__decorate$5([Output(\"onDragSuccess\"), __metadata$4(\"design:type\", EventEmitter)], SortableComponent.prototype, \"onDragSuccessCallback\", void 0);\n__decorate$5([Output(\"onDragStart\"), __metadata$4(\"design:type\", EventEmitter)], SortableComponent.prototype, \"onDragStartCallback\", void 0);\n__decorate$5([Output(\"onDragOver\"), __metadata$4(\"design:type\", EventEmitter)], SortableComponent.prototype, \"onDragOverCallback\", void 0);\n__decorate$5([Output(\"onDragEnd\"), __metadata$4(\"design:type\", EventEmitter)], SortableComponent.prototype, \"onDragEndCallback\", void 0);\n__decorate$5([Output(\"onDropSuccess\"), __metadata$4(\"design:type\", EventEmitter)], SortableComponent.prototype, \"onDropSuccessCallback\", void 0);\nSortableComponent = __decorate$5([__metadata$4(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, SortableContainer, DragDropSortableService, ChangeDetectorRef])], SortableComponent);\nlet SortableHandleComponent = class SortableHandleComponent extends AbstractHandleComponent {\n  constructor(elemRef, dragDropService, config, _Component, cdr) {\n    super(elemRef, dragDropService, config, _Component, cdr);\n  }\n};\nSortableHandleComponent.ɵfac = function SortableHandleComponent_Factory(t) {\n  return new (t || SortableHandleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(SortableComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\nSortableHandleComponent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: SortableHandleComponent,\n  selectors: [[\"\", \"dnd-sortable-handle\", \"\"]],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature]\n});\nSortableHandleComponent = __decorate$5([__metadata$4(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, SortableComponent, ChangeDetectorRef])], SortableHandleComponent);\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet providers = [DragDropConfig, {\n  provide: DragDropService,\n  useFactory: dragDropServiceFactory\n}, {\n  provide: DragDropSortableService,\n  useFactory: dragDropSortableServiceFactory,\n  deps: [DragDropConfig]\n}];\nlet DndModule = DndModule_1 = class DndModule {\n  static forRoot() {\n    return {\n      ngModule: DndModule_1,\n      providers: providers\n    };\n  }\n};\nDndModule.ɵfac = function DndModule_Factory(t) {\n  return new (t || DndModule)();\n};\nDndModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: DndModule\n});\nDndModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDropService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDropSortableService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: DragDropConfig\n    }];\n  }, null);\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbstractComponent, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: DragDropService\n    }, {\n      type: DragDropConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableComponent, [{\n    type: Directive,\n    args: [{\n      selector: '[dnd-draggable]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: DragDropService\n    }, {\n      type: DragDropConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    onDragStart: [{\n      type: Output\n    }],\n    onDragEnd: [{\n      type: Output\n    }],\n    onDragSuccessCallback: [{\n      type: Output,\n      args: [\"onDragSuccess\"]\n    }],\n    draggable: [{\n      type: Input,\n      args: [\"dragEnabled\"]\n    }],\n    dropzones: [{\n      type: Input,\n      args: [\"dropZones\"]\n    }],\n    effectallowed: [{\n      type: Input,\n      args: [\"effectAllowed\"]\n    }],\n    effectcursor: [{\n      type: Input,\n      args: [\"effectCursor\"]\n    }],\n    dragData: [{\n      type: Input\n    }],\n    dragImage: [{\n      type: Input\n    }],\n    cloneItem: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableHandleComponent, [{\n    type: Directive,\n    args: [{\n      selector: '[dnd-draggable-handle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: DragDropService\n    }, {\n      type: DragDropConfig\n    }, {\n      type: DraggableComponent\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DroppableComponent, [{\n    type: Directive,\n    args: [{\n      selector: '[dnd-droppable]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: DragDropService\n    }, {\n      type: DragDropConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    onDropSuccess: [{\n      type: Output\n    }],\n    onDragEnter: [{\n      type: Output\n    }],\n    onDragOver: [{\n      type: Output\n    }],\n    onDragLeave: [{\n      type: Output\n    }],\n    droppable: [{\n      type: Input,\n      args: [\"dropEnabled\"]\n    }],\n    allowdrop: [{\n      type: Input,\n      args: [\"allowDrop\"]\n    }],\n    dropzones: [{\n      type: Input,\n      args: [\"dropZones\"]\n    }],\n    effectallowed: [{\n      type: Input,\n      args: [\"effectAllowed\"]\n    }],\n    effectcursor: [{\n      type: Input,\n      args: [\"effectCursor\"]\n    }]\n  });\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SortableContainer, [{\n    type: Directive,\n    args: [{\n      selector: '[dnd-sortable-container]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: DragDropService\n    }, {\n      type: DragDropConfig\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: DragDropSortableService\n    }];\n  }, {\n    draggable: [{\n      type: Input,\n      args: [\"dragEnabled\"]\n    }],\n    sortableData: [{\n      type: Input\n    }],\n    dropzones: [{\n      type: Input,\n      args: [\"dropZones\"]\n    }]\n  });\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SortableComponent, [{\n    type: Directive,\n    args: [{\n      selector: '[dnd-sortable]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: DragDropService\n    }, {\n      type: DragDropConfig\n    }, {\n      type: SortableContainer\n    }, {\n      type: DragDropSortableService\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    onDragSuccessCallback: [{\n      type: Output,\n      args: [\"onDragSuccess\"]\n    }],\n    onDragStartCallback: [{\n      type: Output,\n      args: [\"onDragStart\"]\n    }],\n    onDragOverCallback: [{\n      type: Output,\n      args: [\"onDragOver\"]\n    }],\n    onDragEndCallback: [{\n      type: Output,\n      args: [\"onDragEnd\"]\n    }],\n    onDropSuccessCallback: [{\n      type: Output,\n      args: [\"onDropSuccess\"]\n    }],\n    draggable: [{\n      type: Input,\n      args: [\"dragEnabled\"]\n    }],\n    droppable: [{\n      type: Input,\n      args: [\"dropEnabled\"]\n    }],\n    effectallowed: [{\n      type: Input,\n      args: [\"effectAllowed\"]\n    }],\n    effectcursor: [{\n      type: Input,\n      args: [\"effectCursor\"]\n    }],\n    index: [{\n      type: Input,\n      args: ['sortableIndex']\n    }],\n    dragData: [{\n      type: Input\n    }]\n  });\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SortableHandleComponent, [{\n    type: Directive,\n    args: [{\n      selector: '[dnd-sortable-handle]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: DragDropService\n    }, {\n      type: DragDropConfig\n    }, {\n      type: SortableComponent\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n      exports: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent]\n    }]\n  }], null, null);\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DndModule, {\n    declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n    exports: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent]\n  });\n})();\nvar DndModule_1;\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { providers, DndModule, AbstractComponent, AbstractHandleComponent, DataTransferEffect, DragImage, DragDropConfig, DragDropData, dragDropServiceFactory, DragDropService, dragDropSortableServiceFactory, DragDropSortableService, DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent };","map":{"version":3,"names":["ChangeDetectorRef","Directive","ElementRef","EventEmitter","Injectable","Input","NgModule","Output","FormArray","ɵngcc0","isString","obj","isPresent","undefined","isFunction","createImage","src","img","HTMLImageElement","callFun","fun","DataTransferEffect","constructor","name","COPY","LINK","MOVE","NONE","DragImage","imageElement","x_offset","y_offset","imgScr","DragDropConfig","onDragStartClass","onDragEnterClass","onDragOverClass","onSortableDragClass","dragEffect","dropEffect","dragCursor","defaultCursor","__decorate$1","__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","DragDropData","dragDropServiceFactory","DragDropService","allowedDropZones","ɵfac","DragDropService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","dragDropSortableServiceFactory","config","DragDropSortableService","_config","elem","_elem","markSortable","classList","remove","add","DragDropSortableService_Factory","ɵɵinject","__decorate$3","__metadata$2","AbstractComponent","elemRef","_dragDropService","_cdr","_dragEnabled","dropEnabled","dropZones","cloneItem","_defaultCursor","nativeElement","style","cursor","ondragenter","event","_onDragEnter","ondragover","_onDragOver","dataTransfer","ondragleave","_onDragLeave","ondrop","_onDrop","onmousedown","_target","ondragstart","_dragHandle","contains","preventDefault","_onDragStart","setData","effectAllowed","dragImage","setDragImage","_dragHelper","cloneNode","position","top","left","parentElement","appendChild","offsetX","offsetY","cursorelem","effectCursor","ondragend","removeChild","_onDragEnd","dragEnabled","enabled","draggable","setDragHandle","detectChanges","setTimeout","destroyed","_isDropAllowed","_onDragEnterCallback","_onDragOverCallback","_onDragLeaveCallback","_preventAndStop","_onDropCallback","isDragged","files","allowDrop","dragData","dragZone","indexOf","stopPropagation","_onDragStartCallback","_onDragEndCallback","AbstractComponent_Factory","AbstractHandleComponent","_Component","__decorate$2","__metadata$1","DraggableComponent","dragDropService","cdr","onDragStart","onDragEnd","onDragSuccessCallback","value","dropzones","effectallowed","effectcursor","emit","mouseEvent","DraggableComponent_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","inputs","outputs","features","ɵɵInheritDefinitionFeature","Boolean","prototype","Array","String","DraggableHandleComponent","DraggableHandleComponent_Factory","__decorate$4","__metadata$3","DroppableComponent","onDropSuccess","onDragEnter","onDragOver","onDragLeave","droppable","allowdrop","DroppableComponent_Factory","Function","__decorate$5","__metadata$4","SortableContainer","_sortableDataService","_sortableData","sortableData","sortableHandler","SortableFormArrayHandler","SortableArrayHandler","item","sortableContainer","getItemAt","index","removeItemAt","insertItemAt","SortableContainer_Factory","splice","at","controls","removeAt","insert","SortableComponent","_sortableContainer","onDragStartCallback","onDragOverCallback","onDragEndCallback","onDropSuccessCallback","SortableComponent_Factory","Number","SortableHandleComponent","SortableHandleComponent_Factory","providers","provide","useFactory","deps","DndModule","DndModule_1","forRoot","ngModule","DndModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","args","selector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["C:/laragon/www/wdd-430/node_modules/ng2-dnd/__ivy_ngcc__/ng2-dnd.js"],"sourcesContent":["import { ChangeDetectorRef, Directive, ElementRef, EventEmitter, Injectable, Input, NgModule, Output } from '@angular/core';\nimport { FormArray } from '@angular/forms';\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n/**\n * Check and return true if an object is type of string\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isString(obj) {\n    return typeof obj === \"string\";\n}\n/**\n * Check and return true if an object not undefined or null\n */\nfunction isPresent(obj) {\n    return obj !== undefined && obj !== null;\n}\n/**\n * Check and return true if an object is type of Function\n */\nfunction isFunction(obj) {\n    return typeof obj === \"function\";\n}\n/**\n * Create Image element with specified url string\n */\nfunction createImage(src) {\n    let img = new HTMLImageElement();\n    img.src = src;\n    return img;\n}\n/**\n * Call the function\n */\nfunction callFun(fun) {\n    return fun();\n}\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nclass DataTransferEffect {\n    constructor(name) {\n        this.name = name;\n    }\n}\nDataTransferEffect.COPY = new DataTransferEffect('copy');\nDataTransferEffect.LINK = new DataTransferEffect('link');\nDataTransferEffect.MOVE = new DataTransferEffect('move');\nDataTransferEffect.NONE = new DataTransferEffect('none');\nclass DragImage {\n    constructor(imageElement, x_offset = 0, y_offset = 0) {\n        this.imageElement = imageElement;\n        this.x_offset = x_offset;\n        this.y_offset = y_offset;\n        if (isString(this.imageElement)) {\n            // Create real image from string source\n            let imgScr = this.imageElement;\n            this.imageElement = new HTMLImageElement();\n            this.imageElement.src = imgScr;\n        }\n    }\n}\nclass DragDropConfig {\n    constructor() {\n        this.onDragStartClass = \"dnd-drag-start\";\n        this.onDragEnterClass = \"dnd-drag-enter\";\n        this.onDragOverClass = \"dnd-drag-over\";\n        this.onSortableDragClass = \"dnd-sortable-drag\";\n        this.dragEffect = DataTransferEffect.MOVE;\n        this.dropEffect = DataTransferEffect.MOVE;\n        this.dragCursor = \"move\";\n        this.defaultCursor = \"pointer\";\n    }\n}\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$1 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nclass DragDropData {\n}\nfunction dragDropServiceFactory() {\n    return new DragDropService();\n}\nlet DragDropService = class DragDropService {\n    constructor() {\n        this.allowedDropZones = [];\n    }\n};\nDragDropService.ɵfac = function DragDropService_Factory(t) { return new (t || DragDropService)(); };\nDragDropService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DragDropService, factory: function (t) { return DragDropService.ɵfac(t); } });\nfunction dragDropSortableServiceFactory(config) {\n    return new DragDropSortableService(config);\n}\nlet DragDropSortableService = class DragDropSortableService {\n    constructor(_config) {\n        this._config = _config;\n    }\n    get elem() {\n        return this._elem;\n    }\n    markSortable(elem) {\n        if (isPresent(this._elem)) {\n            this._elem.classList.remove(this._config.onSortableDragClass);\n        }\n        if (isPresent(elem)) {\n            this._elem = elem;\n            this._elem.classList.add(this._config.onSortableDragClass);\n        }\n    }\n};\nDragDropSortableService.ɵfac = function DragDropSortableService_Factory(t) { return new (t || DragDropSortableService)(ɵngcc0.ɵɵinject(DragDropConfig)); };\nDragDropSortableService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DragDropSortableService, factory: function (t) { return DragDropSortableService.ɵfac(t); } });\nDragDropSortableService = __decorate$1([ __metadata(\"design:paramtypes\", [DragDropConfig])\n], DragDropSortableService);\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$3 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$2 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nlet AbstractComponent = class AbstractComponent {\n    constructor(elemRef, _dragDropService, _config, _cdr) {\n        this._dragDropService = _dragDropService;\n        this._config = _config;\n        this._cdr = _cdr;\n        /**\n         * Whether the object is draggable. Default is true.\n         */\n        this._dragEnabled = false;\n        /**\n         * Allows drop on this element\n         */\n        this.dropEnabled = false;\n        this.dropZones = [];\n        this.cloneItem = false;\n        // Assign default cursor unless overridden\n        this._defaultCursor = _config.defaultCursor;\n        this._elem = elemRef.nativeElement;\n        this._elem.style.cursor = this._defaultCursor; // set default cursor on our element\n        //\n        // DROP events\n        //\n        this._elem.ondragenter = (event) => {\n            this._onDragEnter(event);\n        };\n        this._elem.ondragover = (event) => {\n            this._onDragOver(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.dropEffect = this._config.dropEffect.name;\n            }\n            return false;\n        };\n        this._elem.ondragleave = (event) => {\n            this._onDragLeave(event);\n        };\n        this._elem.ondrop = (event) => {\n            this._onDrop(event);\n        };\n        //\n        // Drag events\n        //\n        this._elem.onmousedown = (event) => {\n            this._target = event.target;\n        };\n        this._elem.ondragstart = (event) => {\n            if (this._dragHandle) {\n                if (!this._dragHandle.contains(this._target)) {\n                    event.preventDefault();\n                    return;\n                }\n            }\n            this._onDragStart(event);\n            //\n            if (event.dataTransfer != null) {\n                event.dataTransfer.setData('text', '');\n                // Change drag effect\n                event.dataTransfer.effectAllowed = this.effectAllowed || this._config.dragEffect.name;\n                // Change drag image\n                if (isPresent(this.dragImage)) {\n                    if (isString(this.dragImage)) {\n                        event.dataTransfer.setDragImage(createImage(this.dragImage));\n                    }\n                    else if (isFunction(this.dragImage)) {\n                        event.dataTransfer.setDragImage(callFun(this.dragImage));\n                    }\n                    else {\n                        let img = this.dragImage;\n                        event.dataTransfer.setDragImage(img.imageElement, img.x_offset, img.y_offset);\n                    }\n                }\n                else if (isPresent(this._config.dragImage)) {\n                    let dragImage = this._config.dragImage;\n                    event.dataTransfer.setDragImage(dragImage.imageElement, dragImage.x_offset, dragImage.y_offset);\n                }\n                else if (this.cloneItem) {\n                    this._dragHelper = this._elem.cloneNode(true);\n                    this._dragHelper.classList.add('dnd-drag-item');\n                    this._dragHelper.style.position = \"absolute\";\n                    this._dragHelper.style.top = \"0px\";\n                    this._dragHelper.style.left = \"-1000px\";\n                    this._elem.parentElement.appendChild(this._dragHelper);\n                    event.dataTransfer.setDragImage(this._dragHelper, event.offsetX, event.offsetY);\n                }\n                // Change drag cursor\n                let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n                if (this._dragEnabled) {\n                    cursorelem.style.cursor = this.effectCursor ? this.effectCursor : this._config.dragCursor;\n                }\n                else {\n                    cursorelem.style.cursor = this._defaultCursor;\n                }\n            }\n        };\n        this._elem.ondragend = (event) => {\n            if (this._elem.parentElement && this._dragHelper) {\n                this._elem.parentElement.removeChild(this._dragHelper);\n            }\n            // console.log('ondragend', event.target);\n            this._onDragEnd(event);\n            // Restore style of dragged element\n            let cursorelem = (this._dragHandle) ? this._dragHandle : this._elem;\n            cursorelem.style.cursor = this._defaultCursor;\n        };\n    }\n    set dragEnabled(enabled) {\n        this._dragEnabled = !!enabled;\n        this._elem.draggable = this._dragEnabled;\n    }\n    get dragEnabled() {\n        return this._dragEnabled;\n    }\n    setDragHandle(elem) {\n        this._dragHandle = elem;\n    }\n    /******* Change detection ******/\n    detectChanges() {\n        // Programmatically run change detection to fix issue in Safari\n        setTimeout(() => {\n            if (this._cdr && !this._cdr.destroyed) {\n                this._cdr.detectChanges();\n            }\n        }, 250);\n    }\n    //****** Droppable *******//\n    _onDragEnter(event) {\n        // console.log('ondragenter._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragEnterCallback(event);\n        }\n    }\n    _onDragOver(event) {\n        // // console.log('ondragover._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // The element is over the same source element - do nothing\n            if (event.preventDefault) {\n                // Necessary. Allows us to drop.\n                event.preventDefault();\n            }\n            this._onDragOverCallback(event);\n        }\n    }\n    _onDragLeave(event) {\n        // console.log('ondragleave._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // event.preventDefault();\n            this._onDragLeaveCallback(event);\n        }\n    }\n    _onDrop(event) {\n        // console.log('ondrop._isDropAllowed', this._isDropAllowed);\n        if (this._isDropAllowed(event)) {\n            // Necessary. Allows us to drop.\n            this._preventAndStop(event);\n            this._onDropCallback(event);\n            this.detectChanges();\n        }\n    }\n    _isDropAllowed(event) {\n        if ((this._dragDropService.isDragged || (event.dataTransfer && event.dataTransfer.files)) && this.dropEnabled) {\n            // First, if `allowDrop` is set, call it to determine whether the\n            // dragged element can be dropped here.\n            if (this.allowDrop) {\n                return this.allowDrop(this._dragDropService.dragData);\n            }\n            // Otherwise, use dropZones if they are set.\n            if (this.dropZones.length === 0 && this._dragDropService.allowedDropZones.length === 0) {\n                return true;\n            }\n            for (let i = 0; i < this._dragDropService.allowedDropZones.length; i++) {\n                let dragZone = this._dragDropService.allowedDropZones[i];\n                if (this.dropZones.indexOf(dragZone) !== -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    _preventAndStop(event) {\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        }\n    }\n    //*********** Draggable **********//\n    _onDragStart(event) {\n        //console.log('ondragstart.dragEnabled', this._dragEnabled);\n        if (this._dragEnabled) {\n            this._dragDropService.allowedDropZones = this.dropZones;\n            // console.log('ondragstart.allowedDropZones', this._dragDropService.allowedDropZones);\n            this._onDragStartCallback(event);\n        }\n    }\n    _onDragEnd(event) {\n        this._dragDropService.allowedDropZones = [];\n        // console.log('ondragend.allowedDropZones', this._dragDropService.allowedDropZones);\n        this._onDragEndCallback(event);\n    }\n    //**** Drop Callbacks ****//\n    _onDragEnterCallback(event) { }\n    _onDragOverCallback(event) { }\n    _onDragLeaveCallback(event) { }\n    _onDropCallback(event) { }\n    //**** Drag Callbacks ****//\n    _onDragStartCallback(event) { }\n    _onDragEndCallback(event) { }\n};\nAbstractComponent.ɵfac = function AbstractComponent_Factory(t) { return new (t || AbstractComponent)(ɵngcc0.ɵɵinject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinject(DragDropService), ɵngcc0.ɵɵinject(DragDropConfig), ɵngcc0.ɵɵinject(ɵngcc0.ChangeDetectorRef)); };\nAbstractComponent.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AbstractComponent, factory: function (t) { return AbstractComponent.ɵfac(t); } });\nAbstractComponent = __decorate$3([ __metadata$2(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig,\n        ChangeDetectorRef])\n], AbstractComponent);\nclass AbstractHandleComponent {\n    constructor(elemRef, _dragDropService, _config, _Component, _cdr) {\n        this._dragDropService = _dragDropService;\n        this._config = _config;\n        this._Component = _Component;\n        this._cdr = _cdr;\n        this._elem = elemRef.nativeElement;\n        this._Component.setDragHandle(this._elem);\n    }\n}\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$2 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$1 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nlet DraggableComponent = class DraggableComponent extends AbstractComponent {\n    constructor(elemRef, dragDropService, config, cdr) {\n        super(elemRef, dragDropService, config, cdr);\n        /**\n         * Callback function called when the drag actions happened.\n         */\n        this.onDragStart = new EventEmitter();\n        this.onDragEnd = new EventEmitter();\n        /**\n         * Callback function called when the drag action ends with a valid drop action.\n         * It is activated after the on-drop-success callback\n         */\n        this.onDragSuccessCallback = new EventEmitter();\n        this._defaultCursor = this._elem.style.cursor;\n        this.dragEnabled = true;\n    }\n    set draggable(value) {\n        this.dragEnabled = !!value;\n    }\n    set dropzones(value) {\n        this.dropZones = value;\n    }\n    /**\n     * Drag allowed effect\n     */\n    set effectallowed(value) {\n        this.effectAllowed = value;\n    }\n    /**\n     * Drag effect cursor\n     */\n    set effectcursor(value) {\n        this.effectCursor = value;\n    }\n    _onDragStartCallback(event) {\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        this._elem.classList.add(this._config.onDragStartClass);\n        //\n        this.onDragStart.emit({ dragData: this.dragData, mouseEvent: event });\n    }\n    _onDragEndCallback(event) {\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        this._elem.classList.remove(this._config.onDragStartClass);\n        //\n        this.onDragEnd.emit({ dragData: this.dragData, mouseEvent: event });\n    }\n};\nDraggableComponent.ɵfac = function DraggableComponent_Factory(t) { return new (t || DraggableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nDraggableComponent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DraggableComponent, selectors: [[\"\", \"dnd-draggable\", \"\"]], inputs: { draggable: [\"dragEnabled\", \"draggable\"], dropzones: [\"dropZones\", \"dropzones\"], effectallowed: [\"effectAllowed\", \"effectallowed\"], effectcursor: [\"effectCursor\", \"effectcursor\"], dragData: \"dragData\", dragImage: \"dragImage\", cloneItem: \"cloneItem\" }, outputs: { onDragStart: \"onDragStart\", onDragEnd: \"onDragEnd\", onDragSuccessCallback: \"onDragSuccess\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n__decorate$2([\n    Input(\"dragEnabled\"),\n    __metadata$1(\"design:type\", Boolean),\n    __metadata$1(\"design:paramtypes\", [Boolean])\n], DraggableComponent.prototype, \"draggable\", null);\n__decorate$2([\n    Output(),\n    __metadata$1(\"design:type\", EventEmitter)\n], DraggableComponent.prototype, \"onDragStart\", void 0);\n__decorate$2([\n    Output(),\n    __metadata$1(\"design:type\", EventEmitter)\n], DraggableComponent.prototype, \"onDragEnd\", void 0);\n__decorate$2([\n    Input(),\n    __metadata$1(\"design:type\", Object)\n], DraggableComponent.prototype, \"dragData\", void 0);\n__decorate$2([\n    Output(\"onDragSuccess\"),\n    __metadata$1(\"design:type\", EventEmitter)\n], DraggableComponent.prototype, \"onDragSuccessCallback\", void 0);\n__decorate$2([\n    Input(\"dropZones\"),\n    __metadata$1(\"design:type\", Array),\n    __metadata$1(\"design:paramtypes\", [Array])\n], DraggableComponent.prototype, \"dropzones\", null);\n__decorate$2([\n    Input(\"effectAllowed\"),\n    __metadata$1(\"design:type\", String),\n    __metadata$1(\"design:paramtypes\", [String])\n], DraggableComponent.prototype, \"effectallowed\", null);\n__decorate$2([\n    Input(\"effectCursor\"),\n    __metadata$1(\"design:type\", String),\n    __metadata$1(\"design:paramtypes\", [String])\n], DraggableComponent.prototype, \"effectcursor\", null);\n__decorate$2([\n    Input(),\n    __metadata$1(\"design:type\", Object)\n], DraggableComponent.prototype, \"dragImage\", void 0);\n__decorate$2([\n    Input(),\n    __metadata$1(\"design:type\", Boolean)\n], DraggableComponent.prototype, \"cloneItem\", void 0);\nDraggableComponent = __decorate$2([ __metadata$1(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig,\n        ChangeDetectorRef])\n], DraggableComponent);\nlet DraggableHandleComponent = class DraggableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef, dragDropService, config, _Component, cdr) {\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n};\nDraggableHandleComponent.ɵfac = function DraggableHandleComponent_Factory(t) { return new (t || DraggableHandleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(DraggableComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nDraggableHandleComponent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DraggableHandleComponent, selectors: [[\"\", \"dnd-draggable-handle\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nDraggableHandleComponent = __decorate$2([ __metadata$1(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, DraggableComponent,\n        ChangeDetectorRef])\n], DraggableHandleComponent);\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$4 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$3 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nlet DroppableComponent = class DroppableComponent extends AbstractComponent {\n    constructor(elemRef, dragDropService, config, cdr) {\n        super(elemRef, dragDropService, config, cdr);\n        /**\n         * Callback function called when the drop action completes correctly.\n         * It is activated before the on-drag-success callback.\n         */\n        this.onDropSuccess = new EventEmitter();\n        this.onDragEnter = new EventEmitter();\n        this.onDragOver = new EventEmitter();\n        this.onDragLeave = new EventEmitter();\n        this.dropEnabled = true;\n    }\n    set droppable(value) {\n        this.dropEnabled = !!value;\n    }\n    set allowdrop(value) {\n        this.allowDrop = value;\n    }\n    set dropzones(value) {\n        this.dropZones = value;\n    }\n    /**\n     * Drag allowed effect\n     */\n    set effectallowed(value) {\n        this.effectAllowed = value;\n    }\n    /**\n     * Drag effect cursor\n     */\n    set effectcursor(value) {\n        this.effectCursor = value;\n    }\n    _onDragEnterCallback(event) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragEnterClass);\n            this.onDragEnter.emit({ dragData: this._dragDropService.dragData, mouseEvent: event });\n        }\n    }\n    _onDragOverCallback(event) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.add(this._config.onDragOverClass);\n            this.onDragOver.emit({ dragData: this._dragDropService.dragData, mouseEvent: event });\n        }\n    }\n    ;\n    _onDragLeaveCallback(event) {\n        if (this._dragDropService.isDragged) {\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n            this.onDragLeave.emit({ dragData: this._dragDropService.dragData, mouseEvent: event });\n        }\n    }\n    ;\n    _onDropCallback(event) {\n        let dataTransfer = event.dataTransfer;\n        if (this._dragDropService.isDragged || (dataTransfer && dataTransfer.files)) {\n            this.onDropSuccess.emit({ dragData: this._dragDropService.dragData, mouseEvent: event });\n            if (this._dragDropService.onDragSuccessCallback) {\n                this._dragDropService.onDragSuccessCallback.emit({ dragData: this._dragDropService.dragData, mouseEvent: event });\n            }\n            this._elem.classList.remove(this._config.onDragOverClass);\n            this._elem.classList.remove(this._config.onDragEnterClass);\n        }\n    }\n};\nDroppableComponent.ɵfac = function DroppableComponent_Factory(t) { return new (t || DroppableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nDroppableComponent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: DroppableComponent, selectors: [[\"\", \"dnd-droppable\", \"\"]], inputs: { droppable: [\"dropEnabled\", \"droppable\"], allowdrop: [\"allowDrop\", \"allowdrop\"], dropzones: [\"dropZones\", \"dropzones\"], effectallowed: [\"effectAllowed\", \"effectallowed\"], effectcursor: [\"effectCursor\", \"effectcursor\"] }, outputs: { onDropSuccess: \"onDropSuccess\", onDragEnter: \"onDragEnter\", onDragOver: \"onDragOver\", onDragLeave: \"onDragLeave\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n__decorate$4([\n    Input(\"dropEnabled\"),\n    __metadata$3(\"design:type\", Boolean),\n    __metadata$3(\"design:paramtypes\", [Boolean])\n], DroppableComponent.prototype, \"droppable\", null);\n__decorate$4([\n    Output(),\n    __metadata$3(\"design:type\", EventEmitter)\n], DroppableComponent.prototype, \"onDropSuccess\", void 0);\n__decorate$4([\n    Output(),\n    __metadata$3(\"design:type\", EventEmitter)\n], DroppableComponent.prototype, \"onDragEnter\", void 0);\n__decorate$4([\n    Output(),\n    __metadata$3(\"design:type\", EventEmitter)\n], DroppableComponent.prototype, \"onDragOver\", void 0);\n__decorate$4([\n    Output(),\n    __metadata$3(\"design:type\", EventEmitter)\n], DroppableComponent.prototype, \"onDragLeave\", void 0);\n__decorate$4([\n    Input(\"allowDrop\"),\n    __metadata$3(\"design:type\", Function),\n    __metadata$3(\"design:paramtypes\", [Function])\n], DroppableComponent.prototype, \"allowdrop\", null);\n__decorate$4([\n    Input(\"dropZones\"),\n    __metadata$3(\"design:type\", Array),\n    __metadata$3(\"design:paramtypes\", [Array])\n], DroppableComponent.prototype, \"dropzones\", null);\n__decorate$4([\n    Input(\"effectAllowed\"),\n    __metadata$3(\"design:type\", String),\n    __metadata$3(\"design:paramtypes\", [String])\n], DroppableComponent.prototype, \"effectallowed\", null);\n__decorate$4([\n    Input(\"effectCursor\"),\n    __metadata$3(\"design:type\", String),\n    __metadata$3(\"design:paramtypes\", [String])\n], DroppableComponent.prototype, \"effectcursor\", null);\nDroppableComponent = __decorate$4([ __metadata$3(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig,\n        ChangeDetectorRef])\n], DroppableComponent);\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate$5 = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata$4 = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nlet SortableContainer = class SortableContainer extends AbstractComponent {\n    constructor(elemRef, dragDropService, config, cdr, _sortableDataService) {\n        super(elemRef, dragDropService, config, cdr);\n        this._sortableDataService = _sortableDataService;\n        this._sortableData = [];\n        this.dragEnabled = false;\n    }\n    set draggable(value) {\n        this.dragEnabled = !!value;\n    }\n    set sortableData(sortableData) {\n        this._sortableData = sortableData;\n        if (sortableData instanceof FormArray) {\n            this.sortableHandler = new SortableFormArrayHandler();\n        }\n        else {\n            this.sortableHandler = new SortableArrayHandler();\n        }\n        //\n        this.dropEnabled = !!this._sortableData;\n        // console.log(\"collection is changed, drop enabled: \" + this.dropEnabled);\n    }\n    get sortableData() {\n        return this._sortableData;\n    }\n    set dropzones(value) {\n        this.dropZones = value;\n    }\n    _onDragEnterCallback(event) {\n        if (this._sortableDataService.isDragged) {\n            let item = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n            // Check does element exist in sortableData of this Container\n            if (this.indexOf(item) === -1) {\n                // Let's add it\n                // console.log('Container._onDragEnterCallback. drag node [' + this._sortableDataService.index.toString() + '] over parent node');\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer._sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this.insertItemAt(item, 0);\n                this._sortableDataService.sortableContainer = this;\n                this._sortableDataService.index = 0;\n            }\n            // Refresh changes in properties of container component\n            this.detectChanges();\n        }\n    }\n    getItemAt(index) {\n        return this.sortableHandler.getItemAt(this._sortableData, index);\n    }\n    indexOf(item) {\n        return this.sortableHandler.indexOf(this._sortableData, item);\n    }\n    removeItemAt(index) {\n        this.sortableHandler.removeItemAt(this._sortableData, index);\n    }\n    insertItemAt(item, index) {\n        this.sortableHandler.insertItemAt(this._sortableData, item, index);\n    }\n};\nSortableContainer.ɵfac = function SortableContainer_Factory(t) { return new (t || SortableContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DragDropSortableService)); };\nSortableContainer.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SortableContainer, selectors: [[\"\", \"dnd-sortable-container\", \"\"]], inputs: { draggable: [\"dragEnabled\", \"draggable\"], sortableData: \"sortableData\", dropzones: [\"dropZones\", \"dropzones\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n__decorate$5([\n    Input(\"dragEnabled\"),\n    __metadata$4(\"design:type\", Boolean),\n    __metadata$4(\"design:paramtypes\", [Boolean])\n], SortableContainer.prototype, \"draggable\", null);\n__decorate$5([\n    Input(),\n    __metadata$4(\"design:type\", Object),\n    __metadata$4(\"design:paramtypes\", [Object])\n], SortableContainer.prototype, \"sortableData\", null);\n__decorate$5([\n    Input(\"dropZones\"),\n    __metadata$4(\"design:type\", Array),\n    __metadata$4(\"design:paramtypes\", [Array])\n], SortableContainer.prototype, \"dropzones\", null);\nSortableContainer = __decorate$5([ __metadata$4(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, ChangeDetectorRef,\n        DragDropSortableService])\n], SortableContainer);\nclass SortableArrayHandler {\n    getItemAt(sortableData, index) {\n        return sortableData[index];\n    }\n    indexOf(sortableData, item) {\n        return sortableData.indexOf(item);\n    }\n    removeItemAt(sortableData, index) {\n        sortableData.splice(index, 1);\n    }\n    insertItemAt(sortableData, item, index) {\n        sortableData.splice(index, 0, item);\n    }\n}\nclass SortableFormArrayHandler {\n    getItemAt(sortableData, index) {\n        return sortableData.at(index);\n    }\n    indexOf(sortableData, item) {\n        return sortableData.controls.indexOf(item);\n    }\n    removeItemAt(sortableData, index) {\n        sortableData.removeAt(index);\n    }\n    insertItemAt(sortableData, item, index) {\n        sortableData.insert(index, item);\n    }\n}\nlet SortableComponent = class SortableComponent extends AbstractComponent {\n    constructor(elemRef, dragDropService, config, _sortableContainer, _sortableDataService, cdr) {\n        super(elemRef, dragDropService, config, cdr);\n        this._sortableContainer = _sortableContainer;\n        this._sortableDataService = _sortableDataService;\n        /**\n         * Callback function called when the drag action ends with a valid drop action.\n         * It is activated after the on-drop-success callback\n         */\n        this.onDragSuccessCallback = new EventEmitter();\n        this.onDragStartCallback = new EventEmitter();\n        this.onDragOverCallback = new EventEmitter();\n        this.onDragEndCallback = new EventEmitter();\n        this.onDropSuccessCallback = new EventEmitter();\n        this.dropZones = this._sortableContainer.dropZones;\n        this.dragEnabled = true;\n        this.dropEnabled = true;\n    }\n    set draggable(value) {\n        this.dragEnabled = !!value;\n    }\n    set droppable(value) {\n        this.dropEnabled = !!value;\n    }\n    /**\n     * Drag allowed effect\n     */\n    set effectallowed(value) {\n        this.effectAllowed = value;\n    }\n    /**\n     * Drag effect cursor\n     */\n    set effectcursor(value) {\n        this.effectCursor = value;\n    }\n    _onDragStartCallback(event) {\n        // console.log('_onDragStartCallback. dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = true;\n        this._sortableDataService.sortableContainer = this._sortableContainer;\n        this._sortableDataService.index = this.index;\n        this._sortableDataService.markSortable(this._elem);\n        // Add dragData\n        this._dragDropService.isDragged = true;\n        this._dragDropService.dragData = this.dragData;\n        this._dragDropService.onDragSuccessCallback = this.onDragSuccessCallback;\n        //\n        this.onDragStartCallback.emit(this._dragDropService.dragData);\n    }\n    _onDragOverCallback(event) {\n        if (this._sortableDataService.isDragged && this._elem !== this._sortableDataService.elem) {\n            // console.log('_onDragOverCallback. dragging elem with index ' + this.index);\n            this._sortableDataService.sortableContainer = this._sortableContainer;\n            this._sortableDataService.index = this.index;\n            this._sortableDataService.markSortable(this._elem);\n            this.onDragOverCallback.emit(this._dragDropService.dragData);\n        }\n    }\n    _onDragEndCallback(event) {\n        // console.log('_onDragEndCallback. end dragging elem with index ' + this.index);\n        this._sortableDataService.isDragged = false;\n        this._sortableDataService.sortableContainer = null;\n        this._sortableDataService.index = null;\n        this._sortableDataService.markSortable(null);\n        // Add dragGata\n        this._dragDropService.isDragged = false;\n        this._dragDropService.dragData = null;\n        this._dragDropService.onDragSuccessCallback = null;\n        //\n        this.onDragEndCallback.emit(this._dragDropService.dragData);\n    }\n    _onDragEnterCallback(event) {\n        if (this._sortableDataService.isDragged) {\n            this._sortableDataService.markSortable(this._elem);\n            if ((this.index !== this._sortableDataService.index) ||\n                (this._sortableDataService.sortableContainer.sortableData !== this._sortableContainer.sortableData)) {\n                // console.log('Component._onDragEnterCallback. drag node [' + this.index + '] over node [' + this._sortableDataService.index + ']');\n                // Get item\n                let item = this._sortableDataService.sortableContainer.getItemAt(this._sortableDataService.index);\n                // Remove item from previouse list\n                this._sortableDataService.sortableContainer.removeItemAt(this._sortableDataService.index);\n                if (this._sortableDataService.sortableContainer.sortableData.length === 0) {\n                    this._sortableDataService.sortableContainer.dropEnabled = true;\n                }\n                // Add item to new list\n                this._sortableContainer.insertItemAt(item, this.index);\n                if (this._sortableContainer.dropEnabled) {\n                    this._sortableContainer.dropEnabled = false;\n                }\n                this._sortableDataService.sortableContainer = this._sortableContainer;\n                this._sortableDataService.index = this.index;\n                this.detectChanges();\n            }\n        }\n    }\n    _onDropCallback(event) {\n        if (this._sortableDataService.isDragged) {\n            // console.log('onDropCallback.onDropSuccessCallback.dragData', this._dragDropService.dragData);\n            this.onDropSuccessCallback.emit(this._dragDropService.dragData);\n            if (this._dragDropService.onDragSuccessCallback) {\n                // console.log('onDropCallback.onDragSuccessCallback.dragData', this._dragDropService.dragData);\n                this._dragDropService.onDragSuccessCallback.emit(this._dragDropService.dragData);\n            }\n            // Refresh changes in properties of container component\n            this._sortableContainer.detectChanges();\n        }\n    }\n};\nSortableComponent.ɵfac = function SortableComponent_Factory(t) { return new (t || SortableComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(SortableContainer), ɵngcc0.ɵɵdirectiveInject(DragDropSortableService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSortableComponent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SortableComponent, selectors: [[\"\", \"dnd-sortable\", \"\"]], inputs: { draggable: [\"dragEnabled\", \"draggable\"], droppable: [\"dropEnabled\", \"droppable\"], effectallowed: [\"effectAllowed\", \"effectallowed\"], effectcursor: [\"effectCursor\", \"effectcursor\"], index: [\"sortableIndex\", \"index\"], dragData: \"dragData\" }, outputs: { onDragSuccessCallback: \"onDragSuccess\", onDragStartCallback: \"onDragStart\", onDragOverCallback: \"onDragOver\", onDragEndCallback: \"onDragEnd\", onDropSuccessCallback: \"onDropSuccess\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n__decorate$5([\n    Input('sortableIndex'),\n    __metadata$4(\"design:type\", Number)\n], SortableComponent.prototype, \"index\", void 0);\n__decorate$5([\n    Input(\"dragEnabled\"),\n    __metadata$4(\"design:type\", Boolean),\n    __metadata$4(\"design:paramtypes\", [Boolean])\n], SortableComponent.prototype, \"draggable\", null);\n__decorate$5([\n    Input(\"dropEnabled\"),\n    __metadata$4(\"design:type\", Boolean),\n    __metadata$4(\"design:paramtypes\", [Boolean])\n], SortableComponent.prototype, \"droppable\", null);\n__decorate$5([\n    Input(),\n    __metadata$4(\"design:type\", Object)\n], SortableComponent.prototype, \"dragData\", void 0);\n__decorate$5([\n    Input(\"effectAllowed\"),\n    __metadata$4(\"design:type\", String),\n    __metadata$4(\"design:paramtypes\", [String])\n], SortableComponent.prototype, \"effectallowed\", null);\n__decorate$5([\n    Input(\"effectCursor\"),\n    __metadata$4(\"design:type\", String),\n    __metadata$4(\"design:paramtypes\", [String])\n], SortableComponent.prototype, \"effectcursor\", null);\n__decorate$5([\n    Output(\"onDragSuccess\"),\n    __metadata$4(\"design:type\", EventEmitter)\n], SortableComponent.prototype, \"onDragSuccessCallback\", void 0);\n__decorate$5([\n    Output(\"onDragStart\"),\n    __metadata$4(\"design:type\", EventEmitter)\n], SortableComponent.prototype, \"onDragStartCallback\", void 0);\n__decorate$5([\n    Output(\"onDragOver\"),\n    __metadata$4(\"design:type\", EventEmitter)\n], SortableComponent.prototype, \"onDragOverCallback\", void 0);\n__decorate$5([\n    Output(\"onDragEnd\"),\n    __metadata$4(\"design:type\", EventEmitter)\n], SortableComponent.prototype, \"onDragEndCallback\", void 0);\n__decorate$5([\n    Output(\"onDropSuccess\"),\n    __metadata$4(\"design:type\", EventEmitter)\n], SortableComponent.prototype, \"onDropSuccessCallback\", void 0);\nSortableComponent = __decorate$5([ __metadata$4(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig,\n        SortableContainer,\n        DragDropSortableService,\n        ChangeDetectorRef])\n], SortableComponent);\nlet SortableHandleComponent = class SortableHandleComponent extends AbstractHandleComponent {\n    constructor(elemRef, dragDropService, config, _Component, cdr) {\n        super(elemRef, dragDropService, config, _Component, cdr);\n    }\n};\nSortableHandleComponent.ɵfac = function SortableHandleComponent_Factory(t) { return new (t || SortableHandleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DragDropService), ɵngcc0.ɵɵdirectiveInject(DragDropConfig), ɵngcc0.ɵɵdirectiveInject(SortableComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nSortableHandleComponent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SortableHandleComponent, selectors: [[\"\", \"dnd-sortable-handle\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nSortableHandleComponent = __decorate$5([ __metadata$4(\"design:paramtypes\", [ElementRef, DragDropService, DragDropConfig, SortableComponent,\n        ChangeDetectorRef])\n], SortableHandleComponent);\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nlet providers = [\n    DragDropConfig,\n    { provide: DragDropService, useFactory: dragDropServiceFactory },\n    { provide: DragDropSortableService, useFactory: dragDropSortableServiceFactory, deps: [DragDropConfig] }\n];\nlet DndModule = DndModule_1 = class DndModule {\n    static forRoot() {\n        return {\n            ngModule: DndModule_1,\n            providers: providers\n        };\n    }\n};\nDndModule.ɵfac = function DndModule_Factory(t) { return new (t || DndModule)(); };\nDndModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DndModule });\nDndModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDropService, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DragDropSortableService, [{\n        type: Injectable\n    }], function () { return [{ type: DragDropConfig }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbstractComponent, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDropService }, { type: DragDropConfig }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableComponent, [{\n        type: Directive,\n        args: [{ selector: '[dnd-draggable]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDropService }, { type: DragDropConfig }, { type: ɵngcc0.ChangeDetectorRef }]; }, { onDragStart: [{\n            type: Output\n        }], onDragEnd: [{\n            type: Output\n        }], onDragSuccessCallback: [{\n            type: Output,\n            args: [\"onDragSuccess\"]\n        }], draggable: [{\n            type: Input,\n            args: [\"dragEnabled\"]\n        }], dropzones: [{\n            type: Input,\n            args: [\"dropZones\"]\n        }], effectallowed: [{\n            type: Input,\n            args: [\"effectAllowed\"]\n        }], effectcursor: [{\n            type: Input,\n            args: [\"effectCursor\"]\n        }], dragData: [{\n            type: Input\n        }], dragImage: [{\n            type: Input\n        }], cloneItem: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DraggableHandleComponent, [{\n        type: Directive,\n        args: [{ selector: '[dnd-draggable-handle]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDropService }, { type: DragDropConfig }, { type: DraggableComponent }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DroppableComponent, [{\n        type: Directive,\n        args: [{ selector: '[dnd-droppable]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDropService }, { type: DragDropConfig }, { type: ɵngcc0.ChangeDetectorRef }]; }, { onDropSuccess: [{\n            type: Output\n        }], onDragEnter: [{\n            type: Output\n        }], onDragOver: [{\n            type: Output\n        }], onDragLeave: [{\n            type: Output\n        }], droppable: [{\n            type: Input,\n            args: [\"dropEnabled\"]\n        }], allowdrop: [{\n            type: Input,\n            args: [\"allowDrop\"]\n        }], dropzones: [{\n            type: Input,\n            args: [\"dropZones\"]\n        }], effectallowed: [{\n            type: Input,\n            args: [\"effectAllowed\"]\n        }], effectcursor: [{\n            type: Input,\n            args: [\"effectCursor\"]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SortableContainer, [{\n        type: Directive,\n        args: [{ selector: '[dnd-sortable-container]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDropService }, { type: DragDropConfig }, { type: ɵngcc0.ChangeDetectorRef }, { type: DragDropSortableService }]; }, { draggable: [{\n            type: Input,\n            args: [\"dragEnabled\"]\n        }], sortableData: [{\n            type: Input\n        }], dropzones: [{\n            type: Input,\n            args: [\"dropZones\"]\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SortableComponent, [{\n        type: Directive,\n        args: [{ selector: '[dnd-sortable]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDropService }, { type: DragDropConfig }, { type: SortableContainer }, { type: DragDropSortableService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { onDragSuccessCallback: [{\n            type: Output,\n            args: [\"onDragSuccess\"]\n        }], onDragStartCallback: [{\n            type: Output,\n            args: [\"onDragStart\"]\n        }], onDragOverCallback: [{\n            type: Output,\n            args: [\"onDragOver\"]\n        }], onDragEndCallback: [{\n            type: Output,\n            args: [\"onDragEnd\"]\n        }], onDropSuccessCallback: [{\n            type: Output,\n            args: [\"onDropSuccess\"]\n        }], draggable: [{\n            type: Input,\n            args: [\"dragEnabled\"]\n        }], droppable: [{\n            type: Input,\n            args: [\"dropEnabled\"]\n        }], effectallowed: [{\n            type: Input,\n            args: [\"effectAllowed\"]\n        }], effectcursor: [{\n            type: Input,\n            args: [\"effectCursor\"]\n        }], index: [{\n            type: Input,\n            args: ['sortableIndex']\n        }], dragData: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SortableHandleComponent, [{\n        type: Directive,\n        args: [{ selector: '[dnd-sortable-handle]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: DragDropService }, { type: DragDropConfig }, { type: SortableComponent }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DndModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent],\n                exports: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DndModule, { declarations: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent], exports: [DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent] }); })();\nvar DndModule_1;\n\n// Copyright (C) 2016-2018 Sergey Akopkokhyants\n// This project is licensed under the terms of the MIT license.\n// https://github.com/akserg/ng2-dnd\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { providers, DndModule, AbstractComponent, AbstractHandleComponent, DataTransferEffect, DragImage, DragDropConfig, DragDropData, dragDropServiceFactory, DragDropService, dragDropSortableServiceFactory, DragDropSortableService, DraggableComponent, DraggableHandleComponent, DroppableComponent, SortableContainer, SortableComponent, SortableHandleComponent };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}